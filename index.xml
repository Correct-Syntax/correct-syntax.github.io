<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Noah Rahm, designer and developer on Noah Rahm</title><link>https://noahrahm.com/</link><description>Recent content in Noah Rahm, designer and developer on Noah Rahm</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 05 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://noahrahm.com/index.xml" rel="self" type="application/rss+xml"/><item><title>The Journey Behind Velocity Lapse Part 6</title><link>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-6/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-6/</guid><description>&lt;p>Welcome to the 6th post in a series of &amp;ldquo;dev-log&amp;rdquo; style posts sharing my journey creating &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a>, a time-lapse app for Android.&lt;/p>
&lt;p>You can read the previous posts to get context up to this point: &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">Part 1&lt;/a>, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/">Part 2&lt;/a>, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-3/">Part 3&lt;/a>, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-4/">Part 4&lt;/a>, and &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-5/">Part 5&lt;/a>.&lt;/p>
&lt;p>If you have any comments or suggestions, feel free to leave a comment below.&lt;/p>
&lt;h3 id="the-v09x-series">The v0.9.x series&lt;/h3>
&lt;p>I&amp;rsquo;m not going to give all the details on every release in the v0.9.x series this time. That would be too much (and perhaps quite boring).&lt;/p>
&lt;p>Instead, I&amp;rsquo;ll just mention that this stage of development fixed many things and added many features that made Velocity Lapse feature complete and much more stable in preparation for the v1.0 launch later in the year.&lt;/p>
&lt;p>Just a few of the highlights included localization, improvements to the manual camera controls, video effects, capture scheduling, 8K image capture and video export, and support for three different video codecs.&lt;/p>
&lt;h3 id="localization">Localization&lt;/h3>
&lt;p>Although I had not originally planned to prioritize translations and localizations, things fell into place. I was able to get the app backend set up without too much issue. Then it was a matter of putting it out on social media and the forum requesting volunteers to add translations to Velocity Lapse.&lt;/p>
&lt;p>Special thanks to &lt;a href="https://www.instagram.com/thomas_tesar/">@thomas_tesar&lt;/a> for the Czech translation and &lt;a href="https://www.instagram.com/dzartsiomi/">@dzartsiomi&lt;/a> for the Russian translation.&lt;/p>
&lt;p>On the technical side, I used standard ARB files that Flutter uses natively for storing strings for localization. I decided to use &lt;a href="https://localise.biz">Loco&lt;/a> for managing the translations. That way the volunteer translators would have a nice interface to update the strings.&lt;/p>
&lt;p>Both of these worked out well together.&lt;/p>
&lt;h3 id="video-effects">Video Effects&lt;/h3>
&lt;p>As mentioned in a previous post, effects like motion blur and star trails were some of my personal feature requests.&lt;/p>
&lt;p>With the video export now working smoothly, I decided to tackle these effects.&lt;/p>
&lt;p>Using OpenCV and a bit of C++ through the Android NDK I was able to get satisfactory motion blur and light trails effects.&lt;/p>
&lt;h3 id="preparing-for-the-v10-release">Preparing for the v1.0 release.&lt;/h3>
&lt;p>Finally, based on feedback from users and my own look at the state of Velocity Lapse, I knew that it was time to exit beta and launch. That isn&amp;rsquo;t to say that everything was absolutely perfect and ready to go (it won&amp;rsquo;t likely ever get to that point!).&lt;/p>
&lt;p>At the start of November, I announced the launch date on 11/4/2024 via Instagram and the email list.&lt;/p>
&lt;p>Speaking of which, one thing I think I could have done better was growing the email list. :)&lt;/p>
&lt;h3 id="user-guide">User guide&lt;/h3>
&lt;p>With v1.0 on the horizon, I worked to create the user guide. It would give users an overview of the functionality and settings of Velocity Lapse. At first the guide was just a page on the main website, but was later moved to its own subdomain at &lt;a href="https://guide.velocitylapse.com">guide.velocitylapse.com&lt;/a>.&lt;/p>
&lt;h3 id="an-updated-logo">An updated logo&lt;/h3>
&lt;p>After two and a half years of development in early access beta, I knew that the current logo had served it&amp;rsquo;s purpose as a stand-in logo.&lt;/p>
&lt;p>For whatever reason, I always had it in the back of my mind to &amp;ldquo;find the time&amp;rdquo; before the v1.0 launch to refine the concept to better reflect the state of Velocity Lapse. Here and there I would play with different designs, but I hadn&amp;rsquo;t come up with anything much.&lt;/p>
&lt;p>Finally, I did find the time.&lt;/p>
&lt;p>I simplified the logo both in terms of colors and shapes while still keeping with the same theme and concept.&lt;/p>
&lt;p>The resulting logo was something I was much happier with than the prior design.&lt;/p>
&lt;h3 id="saying-goodbye-to-the-video-gallery">Saying goodbye to the video gallery&lt;/h3>
&lt;p>A few weeks before the v1.0 launch, I removed video gallery tab. I also changed the functionality so that videos played in the device video player app.&lt;/p>
&lt;p>You might remember that in a previous post I had mentioned how the video gallery was a popular feature request. Well, based on looking at the analytics, it appeared that not very many people &lt;em>actually&lt;/em> used the built-in video gallery.&lt;/p>
&lt;p>That fact, combined with my realization that removing it would save me a lot of code burden, made it a clear decision. In my analysis, it turned out that by eliminating just the video gallery, I was able to cleanup a lot of code and dependencies.&lt;/p>
&lt;p>No doubt, it felt wasteful to add and maintain a feature for almost two years only to remove it just before the v1.0 release. However, it was better to drop the burden sooner than later so I could focus on other parts of the app.&lt;/p>
&lt;h3 id="the-week-before-the-v10-launch">The week before the v1.0 launch&lt;/h3>
&lt;p>The week leading up to the launch day, I was &lt;em>busy&lt;/em> doing my part to make the launch a success.&lt;/p>
&lt;p>I redesigned the website, created promotional images, and scheduled the launch on &lt;a href="https://www.producthunt.com/products/velocity-lapse">Product Hunt&lt;/a>.&lt;/p>
&lt;p>With a couple last-minute bug fixes and tests, I uploaded the app bundle to the Google Play console a few days before the launch to give ample time for Google Play to review it.&lt;/p>
&lt;h3 id="launch-day-nov-17th-2024">Launch day: Nov. 17th, 2024&lt;/h3>
&lt;p>At 12:01a.m the v1.0 release of Velocity Lapse went live on Google Play. The &lt;a href="https://www.producthunt.com/posts/velocity-lapse">Product Hunt launch&lt;/a> was scheduled to go live at 12:01a.m PST (2:01a.m my time). I then went to sleep because I wasn&amp;rsquo;t going to stay up all night. :)&lt;/p>
&lt;p>A few hours later I woke up to some comments on Product Hunt about the launch.&lt;/p>
&lt;p>Since I had written up a plan and did a lot of preparation for the v1.0 launch, it was a matter of just following through. A post on Instagram, YouTube, Reddit and the forum was the majority of the promotion that I did on launch day outside of Product Hunt and the newsletter.&lt;/p>
&lt;p>I spent most of the morning conversing with people on Product Hunt, Instagram, and via email.&lt;/p>
&lt;p>On Product Hunt it ranked #10 which meant that it was featured on the homepage for the day (a really good thing).&lt;/p>
&lt;p>By the end of the day, the v1.0 launch on Product Hunt received &lt;strong>103 upvotes&lt;/strong> and &lt;strong>13 comments&lt;/strong>. &lt;strong>The day rank was #10 and the week rank #80.&lt;/strong>&lt;/p>
&lt;h3 id="reflecting-on-the-launch">Reflecting on the launch&lt;/h3>
&lt;p>Overall, the launch of Velocity Lapse into production went well. One might reasonably suggest that the v1.0 launch was more of an &amp;ldquo;official&amp;rdquo; thing rather than a real launch to the public, especially since Velocity Lapse had been available in early access for over 2 years.&lt;/p>
&lt;p>All things considered, the v1.0 launch was a success with no major problems. For that I am very thankful. ðŸŽ‰&lt;/p>
&lt;h3 id="after-the-launch">After the launch&lt;/h3>
&lt;p>v1.1.0 was pushed into production not too long after the v1.0 launch. v1.1 added a remote shutter feature and other improvements that didn&amp;rsquo;t make it into the v1.0 release.&lt;/p>
&lt;p>For the weeks following the launch, I pushed updates with bug fixes and new features in preparation for the new year.&lt;/p>
&lt;h3 id="another-milestone">Another milestone&lt;/h3>
&lt;p>Another milestone happened about the time of the v1.0 launch: Velocity Lapse crossed &lt;strong>200,000 downloads&lt;/strong> on Google Play.&lt;/p>
&lt;h3 id="the-journey-continues">The journey continues&lt;/h3>
&lt;p>Thanks for reading. I hope you&amp;rsquo;ve enjoyed reading this post.&lt;/p>
&lt;p>If you have a suggestion, a comment, or advice, relating either to the app or this post, I&amp;rsquo;d love to hear what you have to share either in the comments below or via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>&lt;em>A big thanks to numerous individuals for their support and advice, making this journey possible. Special thanks to &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> for which I am grateful for his help developing the Android native side of the app and taking part in testing. And Yahweh, our Heavenly Father, from whom all knowledge and every good thing comes.&lt;/em>&lt;/p></description></item><item><title>The Journey Behind Velocity Lapse Part 5</title><link>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-5/</link><pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-5/</guid><description>&lt;p>Welcome to the 5th post in a series of &amp;ldquo;dev-log&amp;rdquo; style posts sharing my journey creating &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a>, a time-lapse app for Android.&lt;/p>
&lt;p>You can read the previous posts to get context up to this point: &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">Part 1&lt;/a>, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/">Part 2&lt;/a>, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-3/">Part 3&lt;/a>, and &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-4/">Part 4&lt;/a>.&lt;/p>
&lt;p>If you have any comments or suggestions, feel free to leave a comment below.&lt;/p>
&lt;h3 id="capture-view-redesign">Capture view redesign&lt;/h3>
&lt;p>In preparation for upcoming additions and fixes, I redesigned the capture view interface to better fit the necessary controls and make it easier to set and reset values.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-5/redesigned-timelapse-capture.jpg"
alt="Velocity Lapse redesigned timelapse capture interface">
&lt;/figure>
&lt;h3 id="towards-a-stable-app">Towards a stable app&lt;/h3>
&lt;p>My top priority at this point was working toward stability.&lt;/p>
&lt;p>As mentioned in the last post, the Google Play console showed that the user perceived crash rate was around 6-7% (~8% at the peak).&lt;/p>
&lt;p>Of the 7-8%, the export to video crash impacted the most users. Thus, I specifically prioritized getting it resolved.&lt;/p>
&lt;p>Previously, I had tried a number of &amp;ldquo;guesses&amp;rdquo; to fix the issue without success. This time, I decided to tackle it straight on rather than make a guess and wait for feedback from users.&lt;/p>
&lt;p>I found an online real device testing cloud service with enough free minutes that I could test and debug Velocity Lapse on a Galaxy A03 core device. The Galaxy A03 core was one of the devices that crashed consistently, so I knew that would be my best chance of discovering the issue.&lt;/p>
&lt;p>It was painfully slow working with a device through the internet, but I was able to finally fix the crashing issue.&lt;/p>
&lt;p>The issue turned out to be that certain devices don&amp;rsquo;t support hardware encoding and needed to be configured to use &lt;em>software&lt;/em> encoding instead.&lt;/p>
&lt;p>Why it wouldn&amp;rsquo;t automatically switch when necessary, I don&amp;rsquo;t know. I also wonder why any of the &lt;a href="https://developer.android.com/reference/android/media/MediaCodec">MediaCodec&lt;/a> examples I&amp;rsquo;d seen online didn&amp;rsquo;t include this (clearly) vital code gymnastics?&lt;/p>
&lt;p>It was actually a simple problem, but hard to know without seeing the logs produced by the app crashing in debug mode.&lt;/p>
&lt;p>As a result of fixing that issue, the user perceived crash rate dropped from around 6-8% to 1.7% â€”a major improvement.&lt;/p>
&lt;h3 id="targeting-android-13">Targeting Android 13&lt;/h3>
&lt;p>August 31st, 2023 was the deadline to update apps to target SDK 33 (Android 13) on Google Play.&lt;/p>
&lt;p>A few weeks ahead of the deadline I released an update that targeted SDK 33 and made some other changes.&lt;/p>
&lt;p>Soon after, I received a number of reports that there was an error message popping up when creating a new time lapse which made the app useless for new users.&lt;/p>
&lt;p>Frustratingly, like many issues on Android, the error only occurred on certain devices, none of which I had access to. It also didn&amp;rsquo;t show in any Android emulators. Thankfully, I searched the Flurry analytics dashboard for the error code and was able to locate the full stack trace in the console.&lt;/p>
&lt;p>It ended up being an issue with a race condition due to the new storage permission not being called in time and some depreciated camera methods. I quickly resolved the issues and submitted an update, but unfortunately not soon enough before there was a drop off in installs.&lt;/p>
&lt;p>I also updated to the latest Flutter SDK and migrated to Material 3 widgets since the Flutter team would depreciate Material 2 in an upcoming release.&lt;/p>
&lt;p>This confirmed in my mind how important app analytics and crash reporting can be for resolving issues.&lt;/p>
&lt;h3 id="multiple-camera-lens-support">Multiple camera lens support&lt;/h3>
&lt;p>For the first half of the year, switching between the available camera lenses had been in the &amp;ldquo;top most requested features&amp;rdquo; list.&lt;/p>
&lt;p>I was happy to roll out support for switching between the available camera lenses, as a Pro feature.&lt;/p>
&lt;p>Due to Android software/hardware limitations, not every secondary lens supports manual camera controls. However, just having the option to use an ultra-wide lens for a particular time-lapse shot, for example, opens up a lot of creative possibilities.&lt;/p>
&lt;h3 id="targeting-android-14">Targeting Android 14&lt;/h3>
&lt;p>Though Android 14 was still in beta at this point, I decided to update the codebase for Android 14 in anticipation of the full roll out.&lt;/p>
&lt;p>Android 14 introduced a few breaking features that affected Velocity Lapse, but thankfully not that many.&lt;/p>
&lt;p>I needed to wait until Flutter 3.16 to support the predictive back gesture, but I wasn&amp;rsquo;t too thrilled at the changes I&amp;rsquo;d need to make anyway.&lt;/p>
&lt;p>Since everything appeared to be working well on the Android 14 emulators, I decided to just go ahead and target SDK 34.&lt;/p>
&lt;p>Unfortunately, none of my physical Android devices had the Android 14 beta. So technically It wasn&amp;rsquo;t tested properly.&lt;/p>
&lt;p>I&amp;rsquo;ll say that this isn&amp;rsquo;t something I would do if Velocity Lapse didn&amp;rsquo;t carry the &amp;ldquo;early access beta&amp;rdquo; tag. But, since it did I was okay with it.&lt;/p>
&lt;h4 id="frustrations-with-foreground-services">Frustrations with Foreground services&lt;/h4>
&lt;p>Due to the new Android 14 requirements for foreground service camera permissions, I updated to include the new foreground service declarations. If you&amp;rsquo;re not aware, the foreground service allows Velocity Lapse to continue capturing even with the screen shut off. This is a pretty important feature.&lt;/p>
&lt;p>At first Google Play accepted, but then a month or two later rejected it with a policy violation. The email basically said to remove the foreground service and migrate to the WorkManager APIs.&lt;/p>
&lt;p>However, after looking at the WorkManager API documentation, I determined that it would likely still require a foreground service via the WorkManager long running task.&lt;/p>
&lt;p>So I appealed (twice) to hopefully get someone to take a closer look or advise. Soon after, I noticed that the policy violation disappeared from Google Play Console. However, as of this writing, I have yet to hear the result via email.&lt;/p>
&lt;h3 id="a-few-milestones">A few milestones&lt;/h3>
&lt;p>Since the last post, there were a few milestones I thought I&amp;rsquo;d share:&lt;/p>
&lt;p>The YouTube channel crossed &lt;strong>100 subscribers&lt;/strong> and Velocity Lapse crossed &lt;strong>50,000 downloads&lt;/strong> on Google Play.&lt;/p>
&lt;div class="youtube-player">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/vum0osBvn2s?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;h3 id="switching-from-flurry-to-embraceio">Switching from Flurry to Embrace.io.&lt;/h3>
&lt;p>I appreciated Flurry analytics and the fact that it was a free service. However, Flurry was more of an analytics service than a crash reporting and logging service.&lt;/p>
&lt;p>At least at this point, for Velocity Lapse, I prioritized logs and information about crash reports over analytics. So, the fact that Flurry was limited in what it could do for crash reporting and logging caused me to look for an alternative.&lt;/p>
&lt;p>I came across &lt;a href="https://embrace.io/">Embrace.io&lt;/a> which fit precisely what I needed: accurate logging, sessions, and crash reports.&lt;/p>
&lt;p>Thankfully, they had a free tier as I certainly could not afford to pay for it at this point. Integration was fairly straightforward and it greatly improved my debugging experience.&lt;/p>
&lt;p>With Embrace, sessions are shown in a timeline with context and breadcrumbs to help you see when the issue happened.&lt;/p>
&lt;p>This alone was much better than Flurry, which gives only the exception, and behind a tab at that. Quite frankly, I was able to actually get enough context to solve a bunch of bugs right away.&lt;/p>
&lt;p>Switching services meant I needed to update the privacy policy since Embrace collects a bit more data.&lt;/p>
&lt;p>However, I think the switch was worth it since it has since greatly helped in continuing to work towards a stable app.&lt;/p>
&lt;p>As it would turn out, soon after I had completed the migration to Embrace.io, Flurry sent an email stating that they would be sunsetting the service in 2024.&lt;/p>
&lt;p>So, I would have had to migrate to another service anyway.&lt;/p>
&lt;h3 id="the-value-of-velocity-lapse">The value of Velocity Lapse&lt;/h3>
&lt;p>In November, I raised price of Velocity Lapse Pro to $11.99 USD.&lt;/p>
&lt;p>I&amp;rsquo;ll admit that I have a certain amount of cautiousness when it comes to pricing products. The in-app purchase for Velocity Lapse Pro hasn&amp;rsquo;t been different.&lt;/p>
&lt;p>Although I&amp;rsquo;ve had people suggest that I should be charging more, I&amp;rsquo;ve committed to slowly raised the price as I personally see the value increase with the approaching of Velocity Lapse being a more feature-complete.&lt;/p>
&lt;p>Perhaps I&amp;rsquo;m making a mistake there, especially since the purchase is a one-time, lifetime upgrade. However, I&amp;rsquo;d personally rather choose to err on the side of charging what I believe to be fair for the value it provides.&lt;/p>
&lt;p>I&amp;rsquo;m really happy that people see value in purchasing Velocity Lapse Pro. It hasn&amp;rsquo;t been easy and the validation of actual buyers paying for your product is probably the best you can get.&lt;/p>
&lt;p>If you&amp;rsquo;re reading this and you&amp;rsquo;ve purchased Velocity Lapse Pro, please accept my thanks for your support.&lt;/p>
&lt;h3 id="improvements-in-v070">Improvements in v0.7.0&lt;/h3>
&lt;p>In the v0.7.0 release, I added better switching between internal and SD card storage for projects.&lt;/p>
&lt;p>As a nice touch and feature I&amp;rsquo;d had on the roadmap for a while, I implemented a storage indicator that showed how much space was left on the selected storage type. It doubles as the button to switch storage types. This has become one of my favorite features because it just looks and works so nicely.&lt;/p>
&lt;p>To make room for the new storage switcher and indicator, I also moved the video gallery to its own tab. Having the gallery in its own tab was not only more fitting, but actually accessible to the thumb.&lt;/p>
&lt;p>The export video encoder was now more resilient to unexpected images. It would skip any invalid images and cancel the export if certain parameters aren&amp;rsquo;t correct. Much better than crashing.&lt;/p>
&lt;h3 id="researching-and-revisiting">Researching and revisiting&lt;/h3>
&lt;p>During this time I did some research to attain the best setup for a flexible way to set the time-lapse settings and a simple to understand scheduling flow.&lt;/p>
&lt;p>My concept was inspired by a few of the time-lapse interval timer interfaces I&amp;rsquo;d seen.&lt;/p>
&lt;p>It centers around the ability to set the mode for interval and duration. The interval could be set by adjusting the length of time to capture, final video duration, or by setting the interval directly.&lt;/p>
&lt;p>Although I had originally started with a similar concept way back in the very first prototypes of Velocity Lapse a year ago, I decided to revisit the concept with more experience and user feedback to guide me this time.&lt;/p>
&lt;p>For the scheduling, it seemed that I would likely need a way to keep the app awake for hours until the alarm went off. Haven&amp;rsquo;t worked out the details on that yet.&lt;/p>
&lt;h3 id="new-community-forum">New community forum&lt;/h3>
&lt;p>On Nov. 19th, 2023 I setup the &lt;a href="https://forum.velocitylapse.com">community forum&lt;/a> using &lt;a href="https://flarum.org/">Flarum&lt;/a>, an open-source forum platform. The next day, I officially launched the forum and promoted it on the Velocity Lapse Instagram and YouTube accounts.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-5/mobile-timelapse-forum.jpg"
alt="Mobile time-lapse forum">&lt;figcaption>
&lt;p>The Instagram post to announce the forum&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>It is a small experiment whether there is any use for a forum dedicated to &lt;em>mobile&lt;/em> time-lapse photography. Whether it becomes anything in that regard, we&amp;rsquo;ll have to see. Otherwise, it can serve as a place for Velocity Lapse users.&lt;/p>
&lt;h3 id="fixing-the-export-anr">Fixing the export ANR&lt;/h3>
&lt;p>During this time, I received a number of reports of Velocity Lapse freezing and causing ANR errors at the 18 frame during export. From the various reports, I was able to pinpoint the issue as affecting Pixel devices running Android 14.&lt;/p>
&lt;p>To fix the issue, I decided to do a full re-write of the video export encoder. This time I made sure to use Kotlin&amp;rsquo;s coroutines properly and not do any heavy processing in the UI thread.&lt;/p>
&lt;p>Much like before, taking the time to re-write and re-structure the encoder had additional benefits. The new structure enabled me to setup for supporting video effects and H.265 video for inclusion in some future update.&lt;/p>
&lt;p>The re-write fixed the ANR issue and eliminated other issues with the export. Needless to say, releasing v0.7.1 with the new export engine was quite a relief.&lt;/p>
&lt;h3 id="moving-to-stacked-architecture">Moving to Stacked Architecture&lt;/h3>
&lt;p>Until this point I had been using my own state management system based on Flutter&amp;rsquo;s &lt;code>setState&lt;/code>. As the Flutter websites says, &amp;ldquo;You&amp;rsquo;d be surprised how far you can get with just a StatefulWidget&amp;rdquo;.&lt;/p>
&lt;p>Although I think the codebase was arguably &lt;em>decent&lt;/em> for using my own setup, it failed to fully separate UI and logic. The lack of &amp;ldquo;separation of concerns&amp;rdquo; introduced some tricky bugs and was becoming a maintenance burden, especially in the code-heavy areas of the app.&lt;/p>
&lt;p>Moving forward I knew I needed a state management solution that was consistent, tested, and proven.&lt;/p>
&lt;p>I looked into Provider, Riverpod, and Bloc â€”three of the most popular state management libraries. After reviewing documentation and examples for each, I liked the simplicity of Provider.&lt;/p>
&lt;p>Then I came across &lt;a href="https://stacked.filledstacks.com/">Stacked&lt;/a>, a modern, MVVM Flutter state management system with separation of concerns and dependency injection.&lt;/p>
&lt;p>After not a little agonizing (choosing state management is no small thing) and going back and forth between Stacked, Riverpod, and Provider, I decided to go with Stacked.&lt;/p>
&lt;p>At first using Stacked left me a bit nervous since it uses code generation.&lt;/p>
&lt;p>Velocity Lapse fits in the category of a complex app, with many bottom sheets, dialogs, and views with varying levels of light to heavy logic. So, naturally certain portions of the codebase were tricky to re-implement while learning the Stacked MVVM pattern.&lt;/p>
&lt;p>Thanks to the documentation, over time I grasped Stacked MVVM and what the code-generating CLI actually did.&lt;/p>
&lt;p>Once I grasped the concepts, It was basically just putting in the work to re-write the Velocity Lapse codebase with Stacked architecture. It involved many hours of a (rather boring) loop of comparing then typing, as well as copy-pasting wherever possible.&lt;/p>
&lt;p>In the end, the codebase was more consistent, maintainable, and SOLID. I was also able to catch a number of bugs along the way, which resulted in more stable codebase overall.&lt;/p>
&lt;h3 id="v080-photolapse-mode-and-more">v0.8.0: Photolapse mode and more&lt;/h3>
&lt;p>In addition to a whole new project architecture, v0.8.0 included a lot of other sweeping improvements, making it one of the most &amp;ldquo;changed&amp;rdquo; updates to this point. I overhauled and renamed Manual Capture mode to Photolapse mode. The new Photolapse mode had a more streamlined interface with new grid styles, a movable marker, and camera exposure and lenses control.&lt;/p>
&lt;p>Due to all these changes, a couple bugs that I didn&amp;rsquo;t catch in testing slipped into the update.&lt;/p>
&lt;p>The severity of one bug with storage made the app useless for the majority of users that would update. Therefore, I worked till early in the morning to come up with fix and get another update out, hoping I could minimize the number of users affected.&lt;/p>
&lt;h3 id="the-v08x-series">The v0.8.x series&lt;/h3>
&lt;p>Over the v0.8.x series of releases, major improvements were made in every aspect of Velocity Lapse.&lt;/p>
&lt;p>Some long-standing issues, like capture lag, and a regression where turning off the screen while capturing didn&amp;rsquo;t work, were fixed.&lt;/p>
&lt;p>More timestamp options, torch control, and camera white balance control were just a few of the new features added to make this series of releases standout in terms of progress.&lt;/p>
&lt;h3 id="automating-releases">Automating releases&lt;/h3>
&lt;p>For 50+ versions, for each new release I went through the steps to build, upload, and update by hand. Needless to say, this was tedious and took time away from actual development.&lt;/p>
&lt;p>&lt;a href="https://fastlane.tools/">Fastlane&lt;/a> was an obvious choice for automating building and deployment. Implementing the script was very straightforward and saved me at least 10 minutes each release.&lt;/p>
&lt;h3 id="hacker-noon-startup-of-the-year-results">Hacker Noon startup of the year results&lt;/h3>
&lt;p>Late January, I received an email from Hackernoon saying that Velocity Lapse won the Startup of the Year 2023 in Ava, MO.&lt;/p>
&lt;p>Velocity Lapse received 42 votes total, but it was also the &lt;em>only&lt;/em> nominated startup in Ava, MO. Does that count?&lt;/p>
&lt;p>Well, it seems that it did. I was pleasantly surprised to read that they were giving me the prizes for winning Startup of the Year 2023 in Ava, MO.&lt;/p>
&lt;p>The prizes for winning were an NFT award, a Tech Company NewsPage on Hackernoon, and .Tech Domain for life. The tech domain excited me the most.&lt;/p>
&lt;p>For those that want to see it, here&amp;rsquo;s the &lt;a href="https://hackernoon.com/company/velocitylapse">Tech Company NewsPage for Velocity Lapse&lt;/a>.&lt;/p>
&lt;p>So, thank you Hackernoon, .Tech domains, and all those that voted for Velocity Lapse.&lt;/p>
&lt;h3 id="reflecting-on-releasing">Reflecting on releasing&lt;/h3>
&lt;p>At this point (the time of this writing), I&amp;rsquo;m glad that I&amp;rsquo;ve waited to fully launch Velocity Lapse into stable. It has given me time to iron out some major issues and fill in some of the missing feature gaps.&lt;/p>
&lt;p>However, in early 2024, something that had been in the back of my mind for a while came to my attention. Although Velocity Lapse is on the Open Testing (beta) channel, many users treat it as stable.&lt;/p>
&lt;p>I also realized that having thousands of active users updating the app from the &amp;ldquo;bleeding edge&amp;rdquo; of development isn&amp;rsquo;t the best idea. While Velocity Lapse &lt;em>is&lt;/em> much more stable now than ever, its not without issues.&lt;/p>
&lt;p>My habit was to roll out at 100% when deploying updates to make sure bug fixes get to everyone. However, because it hadn&amp;rsquo;t been widely tested yet, an update could break things for existing users.&lt;/p>
&lt;p>Ideally, there should be stable releases for those that want the most stability and betas for those that want to opt-in to testing.&lt;/p>
&lt;p>It probably isn&amp;rsquo;t fair to users, especially that have purchased Pro, for every update to potentially break. Although it has been my commitment to provide support and try to resolve every instance of breaking, I hope that I have not failed in my attempts to do so.&lt;/p>
&lt;p>Which leads me to a good question&amp;hellip;&lt;/p>
&lt;h3 id="are-we-there-yet">Are we there yet?&lt;/h3>
&lt;p>During the past year, I had come across the idea of building a MLP rather than an MVP.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>MVP&lt;/strong> stands for a Minimum &lt;em>Viable&lt;/em> Project&lt;/li>
&lt;li>&lt;strong>MLP&lt;/strong> stands for a Minimum &lt;em>Lovable&lt;/em> Project&lt;/li>
&lt;/ul>
&lt;p>I think there is a good point in that. We should seek to build projects to a minimal point at which they are not just useful but truly provide a great user experience.&lt;/p>
&lt;p>Although Velocity Lapse is certainly past an MVP, has it reached MLP state yet?&lt;/p>
&lt;p>To reiterate, I don&amp;rsquo;t regret holding off releasing fully until now. However, all things considered, its looking favorable for releasing sometime in the near future.&lt;/p>
&lt;p>Releasing something is a huge step. It always is. It&amp;rsquo;s not going to be perfect, but it&amp;rsquo;s a necessary step to continue the next part of the journey.&lt;/p>
&lt;h3 id="why-im-sharing-the-journeywith-mistakes">Why I&amp;rsquo;m sharing the journeyâ€”with mistakes&lt;/h3>
&lt;p>If you&amp;rsquo;ve made it this far in reading (5 posts!), you may have been wondering a few things:&lt;/p>
&lt;p>&lt;em>&amp;ldquo;Why a journey?&amp;rdquo;&lt;/em>&lt;/p>
&lt;p>The journey has to do with going from idea to launching a fully functional time-lapse app for Android. It has been quite a journey of learning and growth for me, at the very least.&lt;/p>
&lt;p>Part of the reason I&amp;rsquo;m writing this dev-log is to be an inspiration to others to show the ups and the downs, the failures and successes, the struggle and the reality of building a complex app yourself (also known as indie app development). It certainly hasn&amp;rsquo;t been easy.&lt;/p>
&lt;p>I think of what someone once said:&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;Nothing ever comes to one, that is worth having, except as a result of hard work.&amp;rdquo;&lt;/p>&lt;/blockquote>
&lt;p>While it is true that one needs to work in order to see results, there are many things that you cannot control. And so I credit any success of Velocity Lapse to our Heavenly Father&amp;rsquo;s grace and the support of family, friends, and users. To have the idea, the time, and abilities to be able to learn, experiment, and work on Velocity Lapse for the past year and a half so far has been a blessing.&lt;/p>
&lt;h3 id="the-journey-continues">The journey continues&lt;/h3>
&lt;p>Thank you for reading. I hope you&amp;rsquo;ve enjoyed this post and have gained something from this journey so far. I know I sure have!&lt;/p>
&lt;p>If you have a suggestion, a comment, or advice, relating either to the app or this post, I&amp;rsquo;d love to hear what you have to share either in the comments below or via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Read the next part of the journey in &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-6/">part 6&lt;/a> of this series.&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;em>A big thanks to numerous individuals for their support and advice, making this journey possible. Special thanks to &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> for which I am grateful for his help developing the Android native side of the app and taking part in testing. And Yahweh, our Heavenly Father, from whom all knowledge and every good thing comes.&lt;/em>&lt;/p></description></item><item><title>20+ Free Resources for Digital Design</title><link>https://noahrahm.com/posts/free-resources-for-digital-design/</link><pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/free-resources-for-digital-design/</guid><description>&lt;p>Having a good set of resources within arm&amp;rsquo;s reach is helpful.&lt;/p>
&lt;p>While there are a ton of really great paid design services and resources that can make life a lot easier, the focus of this list is on &lt;strong>the best free resources&lt;/strong> that I&amp;rsquo;ve personally collected over time. Many of these I&amp;rsquo;ve been using for years for my own &lt;a href="https://noahrahm.com/work/">design work&lt;/a>.&lt;/p>
&lt;p>Whether you&amp;rsquo;re a web, app, UI, UX designer, or none of the above, there&amp;rsquo;s likely at least a few things here you could consider adding to your toolkit.&lt;/p>
&lt;p>Special thanks to all the individuals and companies that made these resources available for designers like us to use free of charge!&lt;/p>
&lt;h3 id="typography">Typography&lt;/h3>
&lt;figure>&lt;img src="https://noahrahm.com/posts/free-resources-for-digital-design/fontjoy.jpg"
alt="A screenshot of FontJoy">&lt;figcaption>
&lt;p>FontJoy in action. Yes, sometimes it comes up with wild combinations&amp;hellip;&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;a href="https://fontjoy.com/">FontJoy&lt;/a> is a really nice font pairing web application tool that generates font combinations with deep learning. If you know what style you&amp;rsquo;re after (and have some patience), it can come up with some nice font pairs for you to consider.&lt;/p>
&lt;p>&lt;a href="https://typespiration.com/">Typespiration&lt;/a> If you&amp;rsquo;re needing some inspiration for type, you can take a look at Typespiration for some designs and guides for font combinations.&lt;/p>
&lt;p>&lt;a href="https://fontba.se/">FontBase&lt;/a> A cross-platform font manager. A very useful tool for using Google/Adobe fonts in any application.&lt;/p>
&lt;p>&lt;a href="https://typescale.com/">Type Scale&lt;/a> is a visual calculator you can use to size your typography.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/free-resources-for-digital-design/typescale.jpg"
alt="A screenshot of Typescale">&lt;figcaption>
&lt;p>Typescale&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;a href="https://www.fontsinthewild.com/">Fontsinthewild.com&lt;/a> Sometimes you just have to see a font used in order to get inspiration to use it in your design. That is the basic premise of fontsinthewild.com, where you browse screenshots of different fonts used on sites &amp;ldquo;in the wild&amp;rdquo;.&lt;/p>
&lt;p>&lt;a href="https://v-fonts.com/">v-fonts&lt;/a> Experiment with variable fonts.&lt;/p>
&lt;p>&lt;a href="https://fontspark.netlify.app/">FontSpark&lt;/a> is a simple tool to find different fonts.&lt;/p>
&lt;p>&lt;a href="https://www.pairandcompare.net/">Pair and Compare&lt;/a> is a great way to mix and match different Google fonts to find the best combination for your design.&lt;/p>
&lt;p>Looking for some good reading resources to improve your typography skills? Read &lt;a href="https://practicaltypography.com/">Butterick&amp;rsquo;s Practical Typography&lt;/a> and &lt;a href="https://fonts.google.com/knowledge/stop_stealing_sheep.pdf">Stop Stealing Sheep &amp;amp; Find Out How Type Works&lt;/a>. You&amp;rsquo;ll be glad you did.&lt;/p>
&lt;h3 id="color-resources">Color resources&lt;/h3>
&lt;p>&lt;a href="https://palx-pwa.pages.dev/">Automatic UI color palette generator&lt;/a> is a very helpful tool for generating a full-spectrum color palette from a single color. I mainly use it when I need to quickly generate a range of grays for a UI design.&lt;/p>
&lt;p>&lt;a href="https://toolness.github.io/accessible-color-matrix/">Accessible color matrix&lt;/a> Accessibility is an important part of choosing colors for a website or app design. This accessible color matrix tool allows you to check if your color combinations conform to accessibility standards.&lt;/p>
&lt;p>&lt;a href="https://hihayk.github.io/scale">ihayk.github.io/scale&lt;/a> A creative way to experiment with different color ranges.&lt;/p>
&lt;h3 id="icon-sets">Icon sets&lt;/h3>
&lt;p>&lt;a href="https://simpleicons.org/">Simple Icons&lt;/a> Very useful and vast collection of 2750 SVG icons for popular brands. I haven&amp;rsquo;t found any brands I&amp;rsquo;ve ever needed to &lt;em>not&lt;/em> be in the Simple Icons collection.&lt;/p>
&lt;p>&lt;a href="https://phosphoricons.com/">Phosphoricons&lt;/a> Open-source icon family offering 6 weights: thin, light, regular, bold, fill, and duotone. Needless to say, it is a very useful and large (1,248+) collection worth bookmarking.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/free-resources-for-digital-design/phosphor-icons.jpg"
alt="A screenshot of the Phosphor icons website">&lt;figcaption>
&lt;p>Phosphor icon family. Go bookmark it â€”it&amp;rsquo;s worth the bookmark.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="software">Software&lt;/h3>
&lt;p>&lt;a href="https://icons8.com/lunacy">Lunacy&lt;/a> is a great design tool. Being a native Windows application makes it fast and smooth to work with. Lunacy works &lt;em>completely offline&lt;/em> and has almost everything I&amp;rsquo;ve ever needed for creating web and graphic designs, having worked with it for the past 3 years.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/free-resources-for-digital-design/lunacy.jpg"
alt="A screenshot of Lunacy open with a logo design document">&lt;figcaption>
&lt;p>Lunacyâ€”my (current) go-to design tool open to my logo design for Hilltop Motion.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;a href="https://penpot.app">PenPot&lt;/a> is an open-source, web-based design and prototyping tool based on open standards.&lt;/p>
&lt;h3 id="templates">Templates&lt;/h3>
&lt;p>If you need something for a specific design software, there are sites that provide free UI kits, icons, templates, mockups, style guides, illustrations, and more. My experience is that you do have to look through a lot of &amp;ldquo;okay&amp;rdquo; stuff to find the gold, though.&lt;/p>
&lt;h4 id="sketch">Sketch&lt;/h4>
&lt;p>&lt;a href="https://sketchelements.com/">SketchElements&lt;/a> is a place to find free Sketch resources. The files can be used with either Lunacy or Sketch.&lt;/p>
&lt;h4 id="figma">Figma&lt;/h4>
&lt;p>Similar to SketchElements.com above, &lt;a href="https://figmaelements.com/">FigmaElements&lt;/a> offers free Figma resources.&lt;/p>
&lt;h3 id="mockups">Mockups&lt;/h3>
&lt;p>&lt;a href="https://www.ls.graphics/free-mockups">ls.graphics&lt;/a> Free, high-quality mockups from ls.graphics.&lt;/p>
&lt;p>&lt;a href="https://mockuphone.com/">MockUPhone&lt;/a> is by far the best free resource I have discovered for generating device mockups. The site allows you to wrap your design in a variety of mobile device frames, including iPhones, iPads, Android phones, laptops, and wearables. The mockups are licensed under the Creative Commons Attribution 3.0 Unported License, making them usable for practically any project.&lt;/p>
&lt;p>Another resource for generating Android mockups is the official &lt;a href="https://developer.android.com/distribute/marketing-tools/device-art-generator">Android Device Art Generator&lt;/a>.&lt;/p>
&lt;h3 id="assets">Assets&lt;/h3>
&lt;figure>&lt;img src="https://noahrahm.com/posts/free-resources-for-digital-design/haikei.jpg"
alt="A screenshot of Haikei generating a layered peaks svg background">&lt;figcaption>
&lt;p>You can generate all sorts of backgrounds with Haikei.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Both &lt;a href="https://superdesigner.co/">superdesigner.co&lt;/a> and &lt;a href="https://haikei.app/">haikei.app&lt;/a> let you generate SVG assets like backgrounds, blobs, patterns, gradients, and shapes for your designs.&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>Thanks for reading. I hope you enjoyed this list of design resources and tools.&lt;/p>
&lt;p>Do you have any free design tools or resources you use that I didn&amp;rsquo;t mention? Feel free to comment below.&lt;/p></description></item><item><title>The Journey Behind Velocity Lapse Part 4</title><link>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-4/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-4/</guid><description>&lt;p>This is the fourth post in a series of &amp;ldquo;dev-log&amp;rdquo; posts about my personal journey and learning process of creating &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a>, a time-lapse app for Android.&lt;/p>
&lt;p>You can read the previous posts, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">Part 1&lt;/a>, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/">Part 2&lt;/a>, and &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-3/">Part 3&lt;/a> to get context of my journey creating &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a> up to this point.&lt;/p>
&lt;p>If you have any comments or suggestions, feel free to leave a comment below.&lt;/p>
&lt;h3 id="continued-progress">Continued progress&lt;/h3>
&lt;p>Starting in 2023, I decided to be more intentional when I work on Velocity Lapse to avoid burnout.&lt;/p>
&lt;h4 id="slower-pace">Slower pace&lt;/h4>
&lt;p>Obviously, I couldn&amp;rsquo;t continue at the same pace that I had during the first 6 months of initial development. I also couldn&amp;rsquo;t justify spending more time on it than a set reasonable amount per week. It also happened that I had other big projects for work come my way.&lt;/p>
&lt;p>And so, I slowed down the pace of development.&lt;/p>
&lt;h4 id="flurry-analytics">Flurry Analytics&lt;/h4>
&lt;p>Ultimately, I decided that it doesn&amp;rsquo;t benefit the users for me to &lt;em>not&lt;/em> have the information I need to improve the app and fix crashes. When it comes down to privacy vs. being able to fix issues quicker, I think most users would choose the latter. So I added Flurry analytics to the app.&lt;/p>
&lt;h3 id="reviewing-launch-dates">Reviewing launch dates&lt;/h3>
&lt;p>You may be wondering, &amp;ldquo;Have I forgotten about the full release? When will that happen?&amp;rdquo;&lt;/p>
&lt;h4 id="not-yet-stable-enough">Not yet stable enough&lt;/h4>
&lt;p>Well, at this point, I didn&amp;rsquo;t believe it was ready for an out-of-beta release.&lt;/p>
&lt;p>For one thing, I had noticed that the user perceived crash rate was around 6-7%, which was over the Google Play maximum threshold.&lt;/p>
&lt;p>Most of the issues were crashes during export. Not a great thing to see.&lt;/p>
&lt;p>In short: Velocity Lapse just wasn&amp;rsquo;t up to production quality yet. I didn&amp;rsquo;t feel right launching to production with that much instability.&lt;/p>
&lt;h4 id="unrealistic-projections">Unrealistic projections&lt;/h4>
&lt;p>Although I had projected an unrealistic launch date for somewhere around the end of Roman &amp;ldquo;January&amp;rdquo;, things were not favorable for that deadline.&lt;/p>
&lt;p>I felt more confident setting the release date to the 7th of Roman &amp;ldquo;March&amp;rdquo;, but that did not end up happening. Even my thought that the app would be ready for full release by Spring fell through.&lt;/p>
&lt;p>Part of this is that the &amp;ldquo;MVP&amp;rdquo; feature list fell prey to &amp;ldquo;scope creep&amp;rdquo;, and I underestimated the amount of time involved to implement some of the features and work through the bugs. This was a good thing, though, since it gave me more time to &amp;ldquo;flesh out&amp;rdquo; the app.&lt;/p>
&lt;h3 id="working-on-the-features-and-fixes">Working on the features and fixes&lt;/h3>
&lt;p>Early Roman February, I zeroed in on the features and fixes that were most necessary for a good user experience, working on them one by one.&lt;/p>
&lt;h4 id="camera-re-write">Camera re-write&lt;/h4>
&lt;p>I began to work on creating my own custom camera package to fix some of the issues with the camera and add features like the ability to capture with the screen off, multi-lense support, and manual white balance control.&lt;/p>
&lt;p>I dove into Kotlin and the Camera2 API to understand it better. Starting small, I first created a basic camera as a native Kotlin project to work out the kinks of the Camera2 API. (As of the time of this writing, this is still in the works.)&lt;/p>
&lt;h4 id="upgrading-to-flutter-37">Upgrading to Flutter 3.7&lt;/h4>
&lt;p>Upgrading to Flutter 3.7 only required a few lines of deprecated code to be changed, which was nice as I didn&amp;rsquo;t need anything extra to work on.&lt;/p>
&lt;h3 id="a-silly-issue-resolved">A silly issue resolved&lt;/h3>
&lt;p>One of the export issues ended up being the result of a single-character typo. Once I corrected that, 4k export worked smoothly. To put it lightly, I was overjoyed and a little upset that such a small mistake caused so much problems.&lt;/p>
&lt;p>However, that didn&amp;rsquo;t solve every issue, as I discovered that export crashed with 720p and 1080p with certain bitrates, somewhat randomly. I later mostly resolved this.&lt;/p>
&lt;h3 id="updating-the-price-of-pro">Updating the price of PRO&lt;/h3>
&lt;p>On Roman Feb. 5th, I raised the in-app purchase of Velocity Lapse PRO to $5.99. This turned out to be a very good decision. The app was indeed worth more than the previous $3.99, based on user feedback. Plus, it allowed me to invest in a test device to further improve Velocity Lapse.&lt;/p>
&lt;h3 id="a-new-test-device">A new test device&lt;/h3>
&lt;p>Until this point, I had to rely on using friends&amp;rsquo; devices to test features that were limited to certain devices, such as 4K. However, relying on bits of time with someone else&amp;rsquo;s device was not reliable or optimal.&lt;/p>
&lt;p>So I decided to look for a phone to buy which supports 4K video so I could test the full functionality of Velocity Lapse myself. Thankfully, I had made enough money from the in-app purchases at this point to reinvest.&lt;/p>
&lt;h4 id="my-experience-ordering-from-back-market">My experience ordering from Back Market&lt;/h4>
&lt;p>A friend had mentioned Back Market as a place to buy refurbished electronics, so I took a look to see what they had.&lt;/p>
&lt;h5 id="phone-requirements">Phone requirements&lt;/h5>
&lt;p>My requirements for the test device were:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>4K video support&lt;/strong> so I could test 4K video.&lt;/li>
&lt;li>&lt;strong>A relatively new model&lt;/strong> as I didn&amp;rsquo;t want it to be too outdated for testing.&lt;/li>
&lt;li>&lt;strong>3.3mm headphone jack&lt;/strong> so that I could hook up an external mic for recording videos.&lt;/li>
&lt;/ul>
&lt;h5 id="my-purchase-from-back-market">My purchase from Back Market&lt;/h5>
&lt;p>After looking around to see what phone model would suit my needs, I settled for a Samsung Galaxy A53 phone, which has 4K video support, and listed the other requirements in the Back Market description.&lt;/p>
&lt;p>The one I chose from Back Market was a &amp;ldquo;Good&amp;rdquo; condition 128GB 5G Samsung Galaxy A53 tracfone phone.&lt;/p>
&lt;p>My initial perception of Back Market wasn&amp;rsquo;t the best. I was wary of buying from Back Market as some people online said it was a scam and I hadn&amp;rsquo;t bought refurbished before. I also didn&amp;rsquo;t like how difficult it seemed to contact them. However, in the end, I decided to go for it.&lt;/p>
&lt;h5 id="not-as-listed">Not as listed&lt;/h5>
&lt;p>Once I received the phone, I set it up and began using it to test. However, I didn&amp;rsquo;t realize until a day or two later that there was no 3.3mm headphone jack that was listed on Back Market (and still is at the time of this writing).&lt;/p>
&lt;p>I opened a support request (which was a very confusing process), and they eventually said, &lt;em>&amp;ldquo;It appears that it was a listing error as in fact, this model does not contain 3.5mm jack for headphones.&amp;rdquo;&lt;/em>&lt;/p>
&lt;p>I decided to keep the phone since I didn&amp;rsquo;t have the time to deal with the hassle of returning it and re-purchasing another model.&lt;/p>
&lt;p>However, at the time of this writing, I looked at their listing for the A53 (the same as the one I purchased) and it still lists the 3.3mm headphone jack. I thought they would have removed the false information by now. So, I contacted them again about it. Hopefully, they fix the listing.&lt;/p>
&lt;h5 id="conclusion-on-the-phone">Conclusion on the phone&lt;/h5>
&lt;p>I haven&amp;rsquo;t had any issues with the phone itself so far. Overall, ordering from Back Market was an OK experience. I&amp;rsquo;m not sure that I would buy from them again, though.&lt;/p>
&lt;h3 id="thoughts-on-negative-software-reviews">Thoughts on negative software reviews&lt;/h3>
&lt;p>Having received a few rather unfair reviews over the past year, I thought I would share my thoughts on negative reviews.&lt;/p>
&lt;h4 id="please-no-hit-and-run-reviews">Please, no hit-and-run reviews&lt;/h4>
&lt;p>If you use software long enough, you will likely be inclined to write a bad review. I&amp;rsquo;ve done it myself more than I would have liked to. Problems &lt;em>will&lt;/em> occur. Issues &lt;em>will&lt;/em> arise. It&amp;rsquo;s inevitable and unavoidable in software. But &lt;em>please&lt;/em> don&amp;rsquo;t be the user who does a &amp;ldquo;hit and run&amp;rdquo;.&lt;/p>
&lt;p>Probably &lt;em>the most frustrating&lt;/em> reviews, in my opinion, are those that say a few negative words (sometimes using profanity) without explaining the issues, and then leave no way for the developer to follow up with them. These individuals either give a fake email or delete the review so you can&amp;rsquo;t respond to their comments.&lt;/p>
&lt;p>Unfortunately for the developer, it does no good because no actionable feedback is given, and they cannot ask for any either. They are left wondering, &amp;ldquo;okay, so what exactly is the problem?&amp;rdquo; It could be thousands of things.&lt;/p>
&lt;p>Ultimately, these kinds of &amp;ldquo;reviews&amp;rdquo; don&amp;rsquo;t do much good, other than to vent feelings and/or frustration because they leave no way to potentially solve the issue.&lt;/p>
&lt;p>Thankfully, I have only received a few of these myself thus far, but it isn&amp;rsquo;t a nice feeling.&lt;/p>
&lt;p>So, please be the user who gives a review with specific, actionable criticism on what should be improved. Constructive criticism, even if it&amp;rsquo;s harsh, can be good. Hit and run negativity is not.&lt;/p>
&lt;h3 id="updating-the-website-for-real">Updating the website (for real)&lt;/h3>
&lt;p>I updated the website yet again. This time I went through the hassle and took the time to write proper copy for the homepage, explaining the benefits of the app. Honestly, it wasn&amp;rsquo;t that hard since, at this point, the app had many nice features and there was user feedback to back it up.&lt;/p>
&lt;p>Multiple people had commented that Velocity Lapse was &amp;ldquo;no doubt&amp;rdquo; the best time-lapse app for Android. I didn&amp;rsquo;t think it was appropriate to put that on the website&amp;hellip;just yet, at least. :)&lt;/p>
&lt;h3 id="v03-and-on-to-v04">v0.3 and on to v0.4&lt;/h3>
&lt;p>To close off the 0.3.x series, I added crash reporting and implemented multi-select and delete for the editor.&lt;/p>
&lt;p>For the 0.4.x series of releases, I aimed to focus on making quality-of-life improvements and fixing bugs.&lt;/p>
&lt;h3 id="prioritizing-of-feature-requests-and-fixes">Prioritizing of feature requests and fixes&lt;/h3>
&lt;p>Sometimes, I would get flooded with feature requests, and it started to get overwhelming. So, I adopted a methodology of prioritizing them based on:&lt;/p>
&lt;p>&lt;strong>1)&lt;/strong> Fixes that would otherwise cause a bad experience for &lt;strong>most users&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>2)&lt;/strong> Features that would improve the experience of &lt;strong>the most users&lt;/strong>.&lt;/p>
&lt;p>Basically, &amp;ldquo;high-impact&amp;rdquo; requests. Oftentimes, that means working on something else in order to fix or add something, but at least it is a little less overwhelming.&lt;/p>
&lt;h3 id="not-really-mvp-anymore">Not really MVP anymore&lt;/h3>
&lt;p>As of the time of this writing, I don&amp;rsquo;t think the app is really an MVP anymore. I made a second pass through most of the app&amp;rsquo;s views and functionality, rewriting and redesigning them with the feedback I&amp;rsquo;ve gathered over the last year. But that&amp;rsquo;s OK.&lt;/p>
&lt;p>Ultimately, &amp;ldquo;Ideas are cheap: execution is everything&amp;rdquo;. So, having something implemented in the app is better than the idea in my head. At least then I know if it&amp;rsquo;s working out or not.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-4/v045&amp;#43;38-app-screenshots.jpg"
alt="Screenshots of Velocity Lapse v0.5.0">
&lt;/figure>
&lt;h3 id="updating-the-price-of-pro-1">Updating the price of PRO&lt;/h3>
&lt;p>On May 17th, 2023, I decided to raise the price of Velocity Lapse PRO to $7.99. At this point, the app was beginning to be more fleshed out and included saving to an SD card as a PRO feature.&lt;/p>
&lt;h3 id="flutter-310">Flutter 3.10&lt;/h3>
&lt;p>Upgrading to Flutter 3.10 was very straightforward. Flutter and Dart have been amazing to work with. Although I&amp;rsquo;ve run into a few areas that are rough around the edges, overall, I couldn&amp;rsquo;t be happier with the developer experience building an app with Flutter.&lt;/p>
&lt;h3 id="hacker-noon-startup-of-the-year-nomination">Hacker Noon startup of the year nomination&lt;/h3>
&lt;p>At the end of Roman May, I was greeted with an email from Hacker Noon that Velocity Lapse had been nominated for Startup of the Year 2023 Ava, MO. This was a nice surprise and awfully nice of someone to do. Although it was just a nomination, the fact that Hacker Noon thought Velocity Lapse was good enough to accept it, was a pretty neat feeling. So, thanks to whoever nominated Velocity Lapse.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-4/hn-nomination-instagram-post.jpg"
alt="Hacker Noon startup of the year 2023 nomination">&lt;figcaption>
&lt;p>I posted Velocity Lapse&amp;rsquo;s Hacker Noon startup of the year 2023 nomination on Instagram&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>By the way, if it&amp;rsquo;s still 2023 when you&amp;rsquo;re reading this and you&amp;rsquo;d like to vote for Velocity Lapse, you can do so &lt;a href="https://hackernoon.com/startups/north-america/north-america-ava-mo-usa">here&lt;/a>. Thanks!&lt;/p>
&lt;h3 id="big-releases">Big releases&lt;/h3>
&lt;p>Leading up to the 1-year anniversary of Velocity Lapse, I worked towards the goal of finishing off the leftover &amp;ldquo;MVP&amp;rdquo; features, adding the most requested features, and re-designing the app to be more presentable and easier to use.&lt;/p>
&lt;h4 id="v04538">v0.4.5+38&lt;/h4>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-4/0-4-5-releases-notes.jpg"
alt="Screenshot of the v0.4.5&amp;#43;38 release notes">
&lt;/figure>
&lt;p>Released the first week of Roman June, v0.4.5+38 was a huge release with tons of interface improvements and additions, as well as the new editor playback feature.&lt;/p>
&lt;h4 id="v05040-1st-year-anniversary-release">v0.5.0+40 1st year anniversary release&lt;/h4>
&lt;p>Throughout the past year, the single most-requested feature was the ability to capture time-lapses with the screen shut off. Initially, I had a difficult time working out how to do it with Android&amp;rsquo;s security and battery limitations, but I was pleased when I was able to find a solution that worked well, just in time for the v0.5.0 1st year anniversary release.&lt;/p>
&lt;p>It seemed like a fitting way to say &amp;ldquo;thank you&amp;rdquo; to all the users who shared feedback to make the app what it is.&lt;/p>
&lt;h3 id="1st-year-anniversary-of-velocity-lapse">1st year anniversary of Velocity Lapse&lt;/h3>
&lt;p>On 6/7/2023 I did a &lt;a href="https://youtube.com/live/ASSWkkVYWJg?feature=share">livestream event&lt;/a> on YouTube, sharing a presentation of some of the background behind Velocity Lapse, the v0.5.0 features, and future plans.&lt;/p>
&lt;p>Due to announcing it only the night before, practically noone knew about it. This was probably a good thing since it was my first live stream. Even though I knew there probably wouldn&amp;rsquo;t be anyone actually watching it live, I still wanted to do it to gain experience.&lt;/p>
&lt;p>Overall, it went fairly well with only a few technical glitches. Certainly not a perfect presentation (or high quality audio).&lt;/p>
&lt;p>I can see that I need to work on not saying &amp;ldquo;so&amp;rdquo; so much (no pun intended). I also probably didn&amp;rsquo;t need to share some of the more technical details, which would bore most people. Well, now I know for next time.&lt;/p>
&lt;h3 id="looking-back-on-the-past-year">Looking back on the past year&lt;/h3>
&lt;p>Over the past year of development, I&amp;rsquo;ve learned a lot about entrepreneurship, app development, and marketing. I truly feel blessed that I&amp;rsquo;ve achieved a certain level of &amp;ldquo;success&amp;rdquo; already. (Success to me is impacting other people&amp;rsquo;s lives in a positive way, and showing them the love of Yahushua, our Savior, if the opportunity arises).&lt;/p>
&lt;p>I&amp;rsquo;ve also been privileged to see glimpses of the impact of Velocity Lapse in the lives of others. From someone capturing time-lapses of their art to creating a time-lapse to document their house remodel to a time-lapse filmmaker capturing the beauty of creation. It is a bit mind-boggling that people, literally &amp;ldquo;on the other side of the world&amp;rdquo;, use the app.&lt;/p>
&lt;h4 id="statistics">Statistics&lt;/h4>
&lt;p>For the data/stats people around, I imagine you&amp;rsquo;ve been holding your breath to hear the stats. Well, here they are.&lt;/p>
&lt;p>&lt;strong>Google Play&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Total downloads since first public on Google Play (since Aug. 2022): &lt;strong>21,200+&lt;/strong>&lt;/li>
&lt;li>Total current installs: &lt;strong>4,700+&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Development&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Amount of individually logged code changes (commits): &lt;strong>780&lt;/strong>&lt;/li>
&lt;li>Number of closed issues: &lt;strong>85&lt;/strong>&lt;/li>
&lt;li>Development time: &lt;strong>A lot. ;)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Revenue&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Gross revenue since I added Velocity Lapse PRO (since Oct. 2022): &lt;strong>~$700&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Note: I&amp;rsquo;m not giving exact numbers and rounding them to an even amount.&lt;/em>&lt;/p>
&lt;h4 id="conclusion-on-the-past-year">Conclusion on the past year&lt;/h4>
&lt;p>Making even a decent time-lapse app takes a lot of time, effort, and dedication.&lt;/p>
&lt;p>Focusing on creating a &amp;ldquo;great app&amp;rdquo; seems to make marketing a bit easier. Thus far, I haven&amp;rsquo;t done much actual promotion, but organic Google Play searches and word-of-mouth are the best marketing I could ask for.&lt;/p>
&lt;p>Although it has yet to generate enough revenue to make it worth my time and headaches from a business perspective, I am blessed to be able to continue to work on it with other motivations.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>1)&lt;/strong> To help others&lt;/li>
&lt;li>&lt;strong>2)&lt;/strong> I want the app for my own use&lt;/li>
&lt;li>&lt;strong>3)&lt;/strong> I get some enjoyment out of the process of creating the app&lt;/li>
&lt;/ol>
&lt;p>I wouldn&amp;rsquo;t mind working on Velocity Lapse more if it became an actual, sustainable business. Probably not a realistic expectation, but it is a possibility, Yahweh-willing.&lt;/p>
&lt;p>I guess we&amp;rsquo;ll see how the next year unfolds.&lt;/p>
&lt;h3 id="a-look-forward">A look forward&lt;/h3>
&lt;p>My goals for the coming months are:&lt;/p>
&lt;ul>
&lt;li>Get Velocity Lapse stable and ready for the full release.&lt;/li>
&lt;li>Re-design and improve the Timelapse and Manual capture views.&lt;/li>
&lt;li>(Hopefully) complete a full re-write of the camera code.&lt;/li>
&lt;li>Talk to some people in the time-lapse and mobile time-lapse niche and see what they think of Velocity Lapse.&lt;/li>
&lt;li>Launch into production.&lt;/li>
&lt;li>Once launched, promote it on Product Hunt.&lt;/li>
&lt;li>And go from there.&lt;/li>
&lt;/ul>
&lt;p>Obviously, you can see how well &lt;em>my&lt;/em> plans have come to pass thus far, so I&amp;rsquo;m going to say &amp;ldquo;Yahweh-willing&amp;rdquo; to all of this.&lt;/p>
&lt;h3 id="the-journey-continues">The journey continues&lt;/h3>
&lt;p>Thank you for reading. I hope you&amp;rsquo;ve enjoyed this post and have gained something from this journey so far. I know I have.&lt;/p>
&lt;p>If you have a suggestion, a comment, or advice, relating either to the app or this post, I&amp;rsquo;d love to hear what you have to share either in the comments below or via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Read the next part of the journey in &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-5/">part 5&lt;/a> of this series.&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;em>A big thanks to numerous individuals for their support and advice, making this journey possible. Special thanks to &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> for which I am grateful for his help developing the Android native side of the app and taking part in testing. And Yahweh, our Heavenly Father, from whom all knowledge and every good thing comes.&lt;/em>&lt;/p></description></item><item><title>The Journey Behind Velocity Lapse Part 3</title><link>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-3/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-3/</guid><description>&lt;p>This is the third post in a series of &amp;ldquo;dev-log&amp;rdquo; posts about my personal journey and learning process of creating &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a>, a time-lapse app for Android.&lt;/p>
&lt;p>You can read the previous posts, &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">Part 1&lt;/a> and &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/">Part 2&lt;/a> to get context up to this point.&lt;/p>
&lt;h3 id="full-rollout-to-open-testing">Full rollout to open testing&lt;/h3>
&lt;p>Towards the end of Roman October 2022, I rolled out the app in open testing to all countries where Google Play is available. Previously, it had only been available in 27 select countries because I wanted to make sure to iron out some issues and &amp;ldquo;test the waters&amp;rdquo;, so-to-speak, before opening up to the whole world.&lt;/p>
&lt;h3 id="first-sales-of-velocity-lapse-pro">First sales of Velocity Lapse PRO&lt;/h3>
&lt;p>Roughly a week later, the very first Velocity Lapse PRO upgrade was purchased. Oct. 24th, 2022, to be exact. There were 321 total downloads and 131 active installs at that time.&lt;/p>
&lt;p>Granted, it was only a few dollars after taxes and Google Play&amp;rsquo;s cut, but it felt really good to have the first sale of the PRO upgrade after months of work with no ROI (besides some nice compliments).&lt;/p>
&lt;p>In the following weeks, sales happened sporadically, mostly in bunches. There were a total of 8 upgrades in the first 3 weeks of being rolled out to all countries.&lt;/p>
&lt;h3 id="creating-the-first-tutorial">Creating the first tutorial&lt;/h3>
&lt;p>For a while, I had been considering making a tutorial on how to capture a starry night time-lapse using Velocity Lapse on an Android phone.&lt;/p>
&lt;p>Finally, I took advantage of a night at a campground where I could capture a time-lapse of the stars without a lot of light pollution.&lt;/p>
&lt;p>The time-lapse itself turned out, but I made the mistake of not explaining what I was doing for the tutorial as I was setting up and capturing. Having to voice over the screencapture and time things correctly in the editing stage was a whole lot more work.&lt;/p>
&lt;p>Although I have created videos before, this was actually my first video tutorial for YouTube that I voiced-over. Even though I felt that it wasn&amp;rsquo;t the best, I was motivated to finish the tutorial because, by just finishing it, I knew I would learn something.&lt;/p>
&lt;p>As expected, the video didn&amp;rsquo;t get a lot of reception. However, I did learn some important lessons by making the video, which I can apply to future videos.&lt;/p>
&lt;h3 id="amazon-app-store">Amazon app store&lt;/h3>
&lt;p>I considered submitting to the Amazon Appstore to gain more visibility and to see if I can&amp;rsquo;t submit an app there, even just for the experience.&lt;/p>
&lt;p>I created an Amazon Developers account and began to go through the form to submit Velocity Lapse so that I could integrate Amazon billing into the app. (App stores require you to upload the app bundle before you can create an IAP to integrate it into your app.)&lt;/p>
&lt;p>However, after uploading the bundle, I found out that due to Velocity Lapse needing the camera autofocus feature, only 3 (old) Amazon devices would be supported. And, at that I would have to lower the minimum SDK version to even get that support.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-3/amazon-appstore-app-support.jpg"
alt="A screenshot showing Amazon tablets support for Velocity Lapse">&lt;figcaption>
&lt;p>Amazon device support for Velocity Lapse&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>So, it just didn&amp;rsquo;t seem worth it. At least for now.&lt;/p>
&lt;h3 id="social-media-marketing">Social media marketing&lt;/h3>
&lt;p>I finally posted on Instagram. I thought maybe the starscape time-lapse video from the tutorial would be a good first post. It did get some response.&lt;/p>
&lt;p>The Youtube channel continued to grow, with 40K views on the starry night sky video and a couple hundred views on other videos. I continued to post new time-lapse videos roughly every 2 weeks and the channel continually gained more subscribers and views.&lt;/p>
&lt;h3 id="product-hunt">Product hunt&lt;/h3>
&lt;p>For quite a while now, I&amp;rsquo;ve eyed &lt;a href="https://producthunt.com">Product Hunt&lt;/a>. I set up the information for Velocity Lapse. However, I could do much more because, at this point, I didn&amp;rsquo;t have a good idea of when I planned to launch.&lt;/p>
&lt;h3 id="first-negative-reviews">First negative reviews&lt;/h3>
&lt;p>Up until this point, there was 99% positive feedback. However, there was a period where a few users submitted two bad 1-star reviews through the Google Play testing feedback. Naturally, I expected it; just didn&amp;rsquo;t know when it would come.&lt;/p>
&lt;p>It appeared that it was due to a bug where the app would crash if the export button was tapped multiple times. So, I had to de-bounce the export button to fix the issue.&lt;/p>
&lt;p>Or so I thought.&lt;/p>
&lt;p>Obviously, that was &lt;em>an&lt;/em> issue, but it was not &lt;em>the&lt;/em> issue as I continued to receive feedback that the export didn&amp;rsquo;t work on certain devices.&lt;/p>
&lt;h3 id="crash-analytics">Crash analytics?&lt;/h3>
&lt;p>Unfortunately, without crash analytics, the only thing I had to reference was the Google Play crash reports. By default Google Play just shows that a crash happened, the device, and the exception name.&lt;/p>
&lt;p>It made me consider that I may have to give in on my idea of &amp;ldquo;staying away from adding any tracking whatsoever to Velocity Lapse&amp;rdquo;. This was tough because I really wanted to have no analytics, but without it, is is harder to debug problems users are having with the app.&lt;/p>
&lt;p>In the end, I decided to hold off on adding analytics and see if I couldn&amp;rsquo;t just figure out the issue myself.&lt;/p>
&lt;h3 id="submitting-to-alternativetonet">Submitting to AlternativeTo.net&lt;/h3>
&lt;p>I submitted Velocity Lapse to &lt;a href="https://alternativeto.net">AlternativeTo.net&lt;/a>, a popular place to look for alternatives to software. In the past, when I&amp;rsquo;ve posted other open source software projects I&amp;rsquo;ve worked on there, a large portion of traffic came from there. So I thought I would try posting Velocity Lapse there for more exposure.&lt;/p>
&lt;h3 id="updating-google-play-and-website">Updating Google Play and website&lt;/h3>
&lt;p>Yet again, I updated the website and the Google Play listing to better match the style I came up with while creating promo images for Product Hunt.&lt;/p>
&lt;h3 id="camera-settings">Camera settings&lt;/h3>
&lt;p>I have respect for every app developer that deals with Camera2 and indeed time-lapse app developers. &lt;em>sigh&lt;/em>&lt;/p>
&lt;p>One issue I had when previously implementing manual camera controls was with white balance. For some reason, manual white balance wouldn&amp;rsquo;t switch back to auto unless ISO and shutter speed were also set to auto.&lt;/p>
&lt;p>Thus, rather than releasing a feature that only partly worked, I just didn&amp;rsquo;t include manual white balance control.&lt;/p>
&lt;h3 id="when-to-release-into-production">When to release into production?&lt;/h3>
&lt;p>I needed to make the decision about when to fully release Velocity Lapse. It is tricky because you don&amp;rsquo;t want to release it before it&amp;rsquo;s ready, but you also don&amp;rsquo;t want to overthink it.&lt;/p>
&lt;p>My thought was to release it early Spring, as the majority of people will likely want to create time-lapse videos in the Spring/Summer. So, my strategy was: get the app up to speed during the winter and release it sometime early Spring.&lt;/p>
&lt;h3 id="app-marketing-strategies">App marketing strategies&lt;/h3>
&lt;p>The balance between building a great product and marketing is difficult. On one side, you want to make the product worthwhile and the best it can be. On the other hand, it&amp;rsquo;s pointless unless someone knows about it. Perfecting the little details while neglecting marketing is an easy thing to do.&lt;/p>
&lt;h4>&lt;/h4>
&lt;p>I mentioned this in the &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">first post&lt;/a> of this series, that early on, when I first started designing the app, I came across something profound.&lt;/p>
&lt;p>In &lt;a href="https://www.youtube.com/watch?v=pfzxL9lXSdE">this video&lt;/a> about app marketing strategies, he explains a few points which I think are worth sharing here.&lt;/p>
&lt;p>The first one is, of course: &lt;strong>Make the app &amp;lsquo;great&amp;rsquo;. Because a &amp;ldquo;just okay&amp;rdquo; app is hard to market.&lt;/strong>&lt;/p>
&lt;p>In order for an app to be successful (on a grand scale), it should be something you are proud of and something you (would) use every day. It should be a legacy, your &amp;ldquo;life&amp;rsquo;s work&amp;rdquo;, something &amp;ldquo;you tell your grandchildren about&amp;rdquo; (Perhaps that&amp;rsquo;s a little extreme, but it makes the point).&lt;/p>
&lt;p>Another words, the app really &lt;em>is&lt;/em> great.&lt;/p>
&lt;p>His second point was: &lt;strong>Reach out to the leading experts (influencers) in your niche and get them to try your app.&lt;/strong>&lt;/p>
&lt;p>It made me think of the fact that if you don&amp;rsquo;t even have the confidence to reach out to leading experts in the niche, your app may not be &amp;lsquo;great&amp;rsquo;. Though, you only have one chance to make a good first impression, so you want to make sure you actually do have a &amp;lsquo;great&amp;rsquo; app.&lt;/p>
&lt;p>The third point was to: &lt;strong>Build around your core audience&lt;/strong>.&lt;/p>
&lt;p>Getting in close contact with the people that use your app every day and getting them involved in the building of the app.&lt;/p>
&lt;p>I can really say that where I have put these points into practice so far, it has paid off.&lt;/p>
&lt;h3 id="continued-development">Continued development&lt;/h3>
&lt;p>As I winded down the v0.2.x and moved to the v0.3.x series of open testing releases, I planned the roadmap for the next series of releases, v0.3.x and v0.4.x.&lt;/p>
&lt;h4 id="v03x-series">v0.3.x series&lt;/h4>
&lt;p>v0.3.0 was an update I had been planning for a while. I planned to begin implementing the edit view features, like importing external images &lt;em>into&lt;/em> an existing project, and (of course) crush some bugs that had been reported.&lt;/p>
&lt;p>I rewrote and improved the whole import system and added the ability to import images into an existing project. Thankfully, I was able to fix some bugs, including a long-standing bug where images with uppercase file extensions would be ignored when importing.&lt;/p>
&lt;h4 id="beginning-work-on-edit-preview">Beginning work on edit preview&lt;/h4>
&lt;p>I then began working on the preview for the edit view. This required the preview to update quickly when an adjustment was made, so I quickly ruled out using a temporary physical file.&lt;/p>
&lt;p>Due to my lack of experience with this side of Flutter, I went ahead and asked in the Flutter help channel about what the most optimized way of creating a real-time image preview was.&lt;/p>
&lt;p>It was suggested that I look into the Flutter &lt;code>Texture&lt;/code> widget, as that would give me low-level access to get the update speed I was looking for.&lt;/p>
&lt;p>I ended up just leaving off working on this to work on higher-priority issues and features.&lt;/p>
&lt;h3 id="user-support">User support&lt;/h3>
&lt;p>One thing about selling software is the support aspect of it. From the very start, I made a real effort to respond to &lt;em>every&lt;/em> person that submitted feedback on Velocity Lapse, whether good or bad. Many people responded that they appreciated the response, which was encouraging.&lt;/p>
&lt;p>However, it&amp;rsquo;s not easy to stay on top of it. I&amp;rsquo;ve taken the approach of &amp;ldquo;better late than never&amp;rdquo; if I didn&amp;rsquo;t get to responding for 2-3 weeks.&lt;/p>
&lt;h3 id="ending-2022">Ending 2022&lt;/h3>
&lt;p>All in all, the first 5 months since I first had the idea for Velocity Lapse have gone well.&lt;/p>
&lt;h4 id="app-statistics">App Statistics&lt;/h4>
&lt;p>From a statistical point of view, the app had been growing at a constant rate, gaining anywhere from 10â€“80 users daily on average.&lt;/p>
&lt;p>As of Dec. 31st, 2022, there were 914 current installs, and just shy of 4K total downloads.&lt;/p>
&lt;p>In the first 3 months of having the PRO upgrade, the app averaged $35 per month gross. Which, isn&amp;rsquo;t too terrible, in my opinion, for an app that is still in early access and hasn&amp;rsquo;t been heavily promoted yet. Especially considering that most apps don&amp;rsquo;t make that in a whole year.&lt;/p>
&lt;p>That said, if my main goal was to make any sort of meaningful revenue from the app, thus far I would be disappointed.&lt;/p>
&lt;h4 id="user-feedback">User feedback&lt;/h4>
&lt;p>I received a good amount of positive feedback. It seemed that the negative feedback came as a result of app crashes, bugs, etc., which is totally understandable. I was thankful for everyone that submitted feedback, whether positive or negative, as it helped to gauge the app progress, etc.&lt;/p>
&lt;h4 id="personal-goals">Personal goals&lt;/h4>
&lt;p>Thus far, Velocity Lapse is very much usable for creating time-lapses. However, I still have a few personal feature needs that I believe need to be implemented. The camera and editor features, motion blur, and star trails are some big ones that I feel are missing. I hope that I can find the time to bring these features into the app in the coming months and years.&lt;/p>
&lt;p>Overall, going from not knowing Flutter and not much about Android development to having an app in beta bringing some ROI and good feedback, I feel that I have learned a lot. It certainly has been a journey of overcoming challenges, both technical and physical.&lt;/p>
&lt;h3 id="the-journey-continues">The journey continues&lt;/h3>
&lt;p>Thanks for reading. I hope you&amp;rsquo;ve enjoyed this post and have gained something from this journey so far. I know I have.&lt;/p>
&lt;p>If you have a suggestion, a comment or some advice, relating either to the app or this post, I&amp;rsquo;d love to hear what you have to share either in the comments below or via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a>.&lt;/p>
&lt;p>&lt;strong>You can read the next part of the journey in &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-4/">part 4&lt;/a> of this series.&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;em>A big thanks to numerous individuals for their support and advice, making this journey possible. Special thanks to &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> for which I am grateful for his help developing the Android native side of the app and taking part in testing. And Yahweh, our Heavenly Father, from whom all knowledge and every good thing comes.&lt;/em>&lt;/p></description></item><item><title>The Journey Behind Velocity Lapse Part 2</title><link>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/</guid><description>&lt;p>In &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">Part 1&lt;/a>, I shared the &amp;ldquo;journey&amp;rdquo; of creating &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a> (a time-lapse app for Android), up to the first internal testing release.&lt;/p>
&lt;h3 id="technical-setbacks">Technical setbacks&lt;/h3>
&lt;p>If I&amp;rsquo;ve made it seem like development was easy with only a few snags in the previous post, then let me reassure you that it wasn&amp;rsquo;t.&lt;/p>
&lt;h4 id="why-i-am-sharing-technical-issues">Why I am sharing technical issues&lt;/h4>
&lt;p>It would take a while to relate to you all of the technical challenges I encountered. I also don&amp;rsquo;t want to make this into a series of posts explaining every problem I&amp;rsquo;ve had during development!&lt;/p>
&lt;p>However, I think it&amp;rsquo;s worth briefly mentioning some of them so that someone can learn and benefit from my mistakes and research.&lt;/p>
&lt;h4 id="resolving-a-limitation-of-the-official-camera-package">Resolving a limitation of the official camera package&lt;/h4>
&lt;p>Since I was using a fork of the official Flutter camera package, the maximum capture resolution was determined by the video capture resolution supported by the device hardware.&lt;/p>
&lt;p>It seems that someone else had come across this limitation as well and had created a fork with some patch code. I was able to adapt the code to allow capturing 4K (if supported) and the full camera sensor resolution.&lt;/p>
&lt;h4 id="another-encoder-issue">Another encoder issue&lt;/h4>
&lt;p>As it would be, though, resolving that limitation led to uncovering something else.&lt;/p>
&lt;p>When exporting a video with a resolution higher than the supported video capture resolution, the encoder would crash with a null pointer exception.&lt;/p>
&lt;p>So, more issues with the encoder, but this time relating to the video encoding resolution.&lt;/p>
&lt;p>Thankfully, &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> graciously helped out with his Android development experience.&lt;/p>
&lt;p>After we both did a ridiculous amount of online searching, going down multiple rabbit trails and to old and obscure websites on the MediaCodec API, we came to a conclusion that seems logical.&lt;/p>
&lt;p>It appears that the device encoding resolution implementation for the MediaCodec API is determined by the supported &lt;em>video capture&lt;/em> resolution. Therefore, encoding a 4K video isn&amp;rsquo;t going to be supported on a device that only supports HD video. For most new but cheap Android phones, the video capture resolution is 1080p HD (1920x1080).&lt;/p>
&lt;p>Indeed, it is a hunch, but it seems to be confirmable and logical. If you know for certain, please let me know in the comments below.&lt;/p>
&lt;h3 id="first-open-testing-release">First open testing release&lt;/h3>
&lt;p>Getting to the point where I figured the app was stable enough for open testing (also known as &amp;ldquo;early access&amp;rdquo;) took 4 months of work.&lt;/p>
&lt;p>In order to submit Velocity Lapse to Google Play for review, I went through the process of writing a description, creating a feature image, and capturing and editing screenshots for the app store page.&lt;/p>
&lt;p>I wrote the description, highlighting the main features and the fact that Velocity Lapse captures images rather than capturing straight to video. It wasn&amp;rsquo;t a great description, but it did the job.&lt;/p>
&lt;p>After submitting, I didn&amp;rsquo;t waste time waiting around for the review to go through. The release was another milestone in my journey, but the app still needed a lot of work before it could really be a great app and something someone would pay for.&lt;/p>
&lt;h3 id="why-i-wont-use-stock-images-to-promote-velocity-lapse">Why I won&amp;rsquo;t use stock images to promote Velocity Lapse&lt;/h3>
&lt;p>One thing to note is that I&amp;rsquo;ve committed to only displaying images and screenshots on the listing and website that were &lt;strong>actually&lt;/strong> captured using Velocity Lapse on a mobile device.&lt;/p>
&lt;p>What do I mean? Well, I won&amp;rsquo;t be showcasing Velocity Lapse using stock photography or other images &lt;em>not&lt;/em> captured with the Velocity Lapse (unless it is clear that the images are externally captured).&lt;/p>
&lt;p>You may be surprised, but sadly, it is not uncommon for even well-known appsâ€”even some &lt;a href="https://www.youtube.com/watch?v=VLKvg8a6g4E">mobile camera apps&lt;/a>, to use stock photography for the app store listing.&lt;/p>
&lt;p>Now, for some apps, I think that it is fine to use stock photography, such as photo editors. There&amp;rsquo;s nothing to say what camera took the image.&lt;/p>
&lt;p>However, for an app where the camera functionality is a big feature (or, â€”&lt;em>gasp&lt;/em>â€”the main feature!), the best way to showcase the app is by displaying images that it captured. Anything else would seem to be deceptive and/or misleading in my mind.&lt;/p>
&lt;p>Although using images that were actually captured with the app can mean that there isn&amp;rsquo;t as much variety and/or it doesn&amp;rsquo;t look as good, it does give the viewer an accurate idea of what to expect. Thus, it keeps their expectations in line with reality.&lt;/p>
&lt;h3 id="promotion-and-my-social-media-strategy">Promotion and my social media strategy&lt;/h3>
&lt;p>One idea that &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> and a few others suggested was to post time-lapse videos created with Velocity Lapse.&lt;/p>
&lt;p>The thought was that perhaps if the videos got popular enough, they would promote the app and inspire others to create their own. They would also serve as real-life examples of what can be created with Velocity Lapse.&lt;/p>
&lt;p>So, I created a &lt;a href="https://www.youtube.com/channel/UCenuOeODNjdVohMTvKv15fQ">Youtube channel&lt;/a> and began posting time-lapse videos there. I also created an &lt;a href="https://www.instagram.com/velocitylapseapp/">Instagram account&lt;/a>, but it sat there unused for a few months, until I got around to making content to post there.&lt;/p>
&lt;p>In addition, I did quite a bit of posting on Reddit. Mostly just replying to existing posts, looking for a time-lapse app. Since the OP was asking for time-lapse apps and those viewing the post were likely looking as well, it was a good way to get some first users and help them find something they could use to create time-lapses.&lt;/p>
&lt;p>All in all, this was a pretty good strategy, looking back at the successes in both avenues.&lt;/p>
&lt;h3 id="user-testing-and-the-interface-refactoring-loop">User testing and the interface refactoring loop&lt;/h3>
&lt;p>After yet more user testing and feedback, I began a refactoring of the UI. At first, it primarily centered around the home view.&lt;/p>
&lt;p>The most useful method of conducting user testing that I have found is physically watching the test users use the app. I mean practically looking over their shoulder and writing down notes about their interaction.&lt;/p>
&lt;p>Getting face-to-face feedback, both positive and negative, and seeing how people use the app in real life crushes some dreamy, false notions you can have as a developer and designer about how the app should work.&lt;/p>
&lt;p>Getting this feedback at this point brought up some good ideas for improvements as well as confirmed some ideas that I was personally hesitant to implement (I&amp;rsquo;ll admit).&lt;/p>
&lt;p>It was without doubt a popular request to add a gallery to view exported videos, so I added it to the near future roadmap. I also moved the main call to action buttons to a more thumb-friendly position and polished up various parts of the UI.&lt;/p>
&lt;h4 id="introduction-of-the-bottom-nagivation-bar">Introduction of the bottom nagivation bar&lt;/h4>
&lt;p>In order to better organize the new features, such as importing a sequence of images as a project, I introduced a bottom navigation bar. It divided Velocity Lapse&amp;rsquo;s main functions into three understandable categories.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-2/bottom-navigation-bar.jpg"
alt="Bottom navigation">&lt;figcaption>
&lt;p>Introducing the bottom tab navigation&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="the-second-open-testing-release">The second open testing release&lt;/h3>
&lt;p>With the new &amp;ldquo;import images as a project&amp;rdquo; feature and the UI refactor, I was eager to publish and roll out another release.&lt;/p>
&lt;p>Thankfully, by the time I had the release ready a week later, the Google Play app review had gone through, and Velocity Lapse was finally published for public early access.&lt;/p>
&lt;h3 id="third-open-testing-release">Third open testing release&lt;/h3>
&lt;p>The third open testing release included the new tab navigation and the &amp;ldquo;import images as project&amp;rdquo; feature.&lt;/p>
&lt;p>I now felt like promoting, so I updated the website and replied to a few questions asking for time-lapse app suggestions on Reddit. It turned out to be a good thing as over the next few months, a couple of people found Velocity Lapse through my comment and gave feedback.&lt;/p>
&lt;h3 id="focusing-on-the-things-users-care-about">Focusing on the things users care about&lt;/h3>
&lt;p>Listening and acting upon user feedback can be hard. For Velocity Lapse, the feedback was mainly concerning missing features.&lt;/p>
&lt;p>I was reminded that tweaking the UI is great, but ultimately most users will accept it the way it is. They &lt;em>will&lt;/em> care whether a certain feature is available and works. So, I need to focus on &lt;em>functional&lt;/em> features that meet the needs of the user.&lt;/p>
&lt;p>It could be very easy to prioritize the things I care about (a clean, sleek interface and well-written code) rather than the things end users actually care about (like feature X or Y). Working on &amp;ldquo;fun&amp;rdquo; parts that I enjoy most is great, but if in the end users don&amp;rsquo;t ever need it, then it is a waste of time.&lt;/p>
&lt;h3 id="adding-manual-capture-mode">Adding Manual Capture mode&lt;/h3>
&lt;p>The capture view with the interval setting and other features was great; however, it didn&amp;rsquo;t fulfill one required use-case that I had in mind from the beginning: time-lapse captures over &lt;em>extended periods of time&lt;/em>. It would also cater to those who would rather not leave their device somewhere while it is capturing.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-2/manual-capture-view.jpg"
alt="Manual capture view">&lt;figcaption>
&lt;p>The manual capture view in v0.0.4+6&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>I named this mode the Manual Capture mode. It includes a camera view with an overlay of the previous image and an indicator telling when the last image was captured.&lt;/p>
&lt;p>This was simple enough to implement, but it still took time to differentiate the project UI from the normal Timelapse Capture mode and develop the special interface for it.&lt;/p>
&lt;h3 id="first-user-submitted-feedback">First user-submitted feedback&lt;/h3>
&lt;p>After nine versions into early access, I felt more confident about Velocity Lapse. It had come a long ways since the first version, going from a barely useable app to an app I actually wanted and enjoyed using almost every day.&lt;/p>
&lt;p>At this point, I updated the website landing page to better showcase the app and direct visitors to Google Play.&lt;/p>
&lt;p>Not long after, I received the first externally submitted feedback on Velocity Lapse. It included a crash report and a few suggestions on how to make the import images as projects feature more user-friendly.&lt;/p>
&lt;h3 id="monitizing-the-app">Monitizing the app&lt;/h3>
&lt;p>If I was creating a free app, the main work would be complete. However, because this is an app with IAPs (in-app purchases), it required the steps to integrate with Google Play billing. This turned out to be one of the more challenging parts of creating Velocity Lapse thus far.&lt;/p>
&lt;h4 id="the-question-of-app-monitization">The question of app monitization&lt;/h4>
&lt;p>There was one thing I was not confident about, and that was what features to have as in-app purchases for the PRO version.&lt;/p>
&lt;p>I settled upon having the free version limited in the following ways:&lt;/p>
&lt;h6 id="free-version">FREE VERSION&lt;/h6>
&lt;ul>
&lt;li>Limit of up to 5 projects at one time&lt;/li>
&lt;li>Export up to 1080p video&lt;/li>
&lt;li>Import images as project limited to import of 400 images&lt;/li>
&lt;/ul>
&lt;h6 id="pro-version">PRO VERSION&lt;/h6>
&lt;ul>
&lt;li>Unlock unlimited projects&lt;/li>
&lt;li>Export up to 4K video (if the device supports it)&lt;/li>
&lt;li>Import images as project with unlimited number of images&lt;/li>
&lt;/ul>
&lt;p>This way, the free version of the app is limited in a way that all the features are usable, but there is (hopefully) enough of an incentive to upgrade to the PRO version to allow unlimited access.&lt;/p>
&lt;h4 id="keeping-the-sabbath-day">Keeping the Sabbath Day&lt;/h4>
&lt;p>Something that I wanted to make sure to do, was block purchasing Velocity Lapse PRO on Saturday in observance of the Sabbath.&lt;/p>
&lt;p>I believe in keeping the seventh day Sabbath (Roman Saturday) as described in the Bible. The Sabbath is a set-apart day of rest and so no buying, selling, or trading is to be done on it (as I understand it).&lt;/p>
&lt;p>I&amp;rsquo;ll state here that I am &lt;strong>not&lt;/strong> a part of any denomination (SDA or otherwise).&lt;/p>
&lt;p>My motivation for keeping the Sabbath holy is to do as Yahweh, our Heavenly Father Himself, and our Savior did: rest on the seventh day.&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;And on the seventh day Yahweh ended his work which he had made; and he rested on the seventh day from all his work which he had made. And Yahweh blessed the seventh day, and sanctified it: because that in it he had rested from all his work which Yahweh created and made.&amp;rdquo; -Genesis 2:2-3&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;ldquo;If thou turn away thy foot from the sabbath, from doing thy pleasure on My holy day; and call the sabbath a delight, the holy of Yahweh, honourable; and shalt honour him, not doing thine own ways, nor finding thine own pleasure, nor speaking thine own words: Then shalt thou delight thyself in Yahweh; and I will cause thee to ride upon the high places of the earth, and feed thee with the heritage of Jacob thy father: for the mouth of Yahweh hath spoken it.&amp;rdquo; -Isaiah 58:13-14&lt;/p>&lt;/blockquote>
&lt;p>There are many more verses in the Bible regarding the importance of keeping the seventh-day Sabbath.&lt;/p>
&lt;p>For some Django-based websites I worked on in the past, I had created and used a Django app called &lt;a href="https://github.com/Correct-Syntax/Keep-Sabbath">Keep Sabbath&lt;/a> which would redirect visitors or show a banner stating that the e-commerce site was closed for the Sabbath.&lt;/p>
&lt;p>I did something similar for Velocity Lapse, so that a screen would come up letting them know that they wouldn&amp;rsquo;t be able to purchase until the next day.&lt;/p>
&lt;p>The saying, &lt;em>&amp;ldquo;A day of rest, a Sabbath request: please refrain from purchasing between sundown Friday and sundown Saturday.&amp;rdquo;&lt;/em> was inspired by someone else&amp;rsquo;s banner I had seen.&lt;/p>
&lt;h4 id="technical-implementation-of-iap">Technical implementation of IAP&lt;/h4>
&lt;p>Creating the PRO upgrade screen UI itself was one of the screens I most enjoyed implementing (for whatever reason).&lt;/p>
&lt;p>However, implementing the IAP integration itself proved to be a lengthy process.&lt;/p>
&lt;p>I decided to use &lt;a href="https://revenuecat.com">RevenueCat&lt;/a> to manage purchase validation, etc. rather than writing and maintaining my own web API to do so.&lt;/p>
&lt;p>Setting up a Google cloud service account and connecting it to RevenueCat to access the Play Store API on my behalf was a lengthy, but necessary process.&lt;/p>
&lt;p>Unfortunately, not everything in the documentation for a Flutter RevenueCat integration was as clear as I thought it should be.&lt;/p>
&lt;p>The main culprit of the problems was Dart null safety. Many articles online didn&amp;rsquo;t handle null safety, and the snippets in the RevenueCat documentation only went so far. For that reason, I may write a post in the future on how to implement RevenueCat with Flutter and Dart null safety.&lt;/p>
&lt;p>Thankfully, I was familiar enough with Dart to figure it out. In the end, I had a single in-app purchase for users to upgrade to Velocity Lapse PRO for $3.99 USD.&lt;/p>
&lt;h3 id="updating-the-google-play-listing-again">Updating the Google Play listing (again)&lt;/h3>
&lt;p>Now that we had a pretty solid version of Velocity Lapse, I went and captured updated screenshots of major screens of the app and created phone screenshots for the Google Play listing.&lt;/p>
&lt;p>This time, I used a different style with a faded image behind the phone and screenshot mockup as well as a horizontal screenshot to better showcase the two capture modes.&lt;/p>
&lt;p>For the months prior, I had been posting some of the time-lapse videos I had captured to the official Velocity Lapse YouTube channel. I added one of the videos as the &amp;ldquo;feature video&amp;rdquo; for Google Play. In my opinion, just adding the video made the listing look a lot better than before.&lt;/p>
&lt;h3 id="posting-on-reddit">Posting on Reddit&lt;/h3>
&lt;p>I submitted a &lt;a href="https://www.reddit.com/r/androidapps/comments/xjve1u/velocity_lapse_create_your_own_time_lapse_videos/">Reddit post&lt;/a> to gather feedback regarding Velocity Lapse. The post received 700+ views in the first week. It caused a surge of downloads, and I did receive some helpful feedback (albeit not on Reddit itself).&lt;/p>
&lt;h3 id="big-features-big-holdups">Big features, big holdups&lt;/h3>
&lt;p>The next tasks on the roadmap were to get 4K export and manual camera controls implemented.&lt;/p>
&lt;h4 id="4k-video-export">4K video export&lt;/h4>
&lt;p>4K export to video wasn&amp;rsquo;t a huge feature to implement. However, since I didn&amp;rsquo;t have an Android device that supported 4K, testing was tricky. I ended up getting an hour to test on a friend&amp;rsquo;s phone which I hoped was enough to have caught any issues.&lt;/p>
&lt;p>If not&amp;hellip; I was sure users would let me know.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>EDIT:&lt;/strong> they did.&lt;/p>&lt;/blockquote>
&lt;h4 id="manual-camera-controls">Manual camera controls&lt;/h4>
&lt;p>I spent two weeks working through the Android Camera2 API to implement manual camera controls, ISO, shutter speed, and focus distance (manual focus).&lt;/p>
&lt;h4 id="the-woes-of-the-android-camera2-api">The woes of the Android Camera2 API&lt;/h4>
&lt;p>Needless to say, working with the Android Camera2 API was not easy.&lt;/p>
&lt;p>Something that worked on one device didn&amp;rsquo;t on another, which lends to the reason it is &lt;a href="https://www.androidpolice.com/why-third-party-camera-apps-are-so-bad-on-android/">notorious&lt;/a> for fragmented support and overall a bad experience for developers. So much so that some app developers &lt;a href="https://9to5google.com/2020/02/29/moment-pro-camera-app-android-exclusive/">give up on it&lt;/a>. Which, makes me feel uneasy and sort of mad.&lt;/p>
&lt;p>The first time I tried to capture a night time-lapse of the stars, it didn&amp;rsquo;t turn out as I expected. I had been working on implementing shutter speed and ISO controls that would allow for nighttime captures.&lt;/p>
&lt;p>I set the device out to capture, and it seemed perfect in the camera preview. However, when I came back and looked at the captured images afterwards, I realized that images were being captured as if auto exposure was still on.&lt;/p>
&lt;p>Finally, after two weeks of researching and testing to get manual camera controls implemented correctly, I finally got the code to a point where it worked.&lt;/p>
&lt;p>I tried capturing a starry night time-lapse once again. I pointed the device upwards, set the shutter speed to 1 sec and the ISO to 6400, then left it to time-lapse for ~2 hours. The result was satisfying for a first successful attempt.&lt;/p>
&lt;p>I was happy to post the video on YouTube since it was the first night time-lapse that had turned out fairly nicely.&lt;/p>
&lt;h3 id="some-encouragement-via-positive-feedback">Some encouragement via positive feedback&lt;/h3>
&lt;p>Thankfully, it was now working, and more users and positive feedback came as a result of my posts on Reddit, which was encouraging. Nicely timed it was, as one person suggested that I add manual camera controls!&lt;/p>
&lt;h3 id="turning-the-landing-page-into-a-website">Turning the landing page into a website&lt;/h3>
&lt;p>I finally took some time aside to create a decent design for &lt;a href="https://velocitylapse.com">the website&lt;/a> that would showcase the app features and the time-lapses that I had captured with it. My main thought with it was to inspire people to get out and create their own time-lapses.&lt;/p>
&lt;p>At this point, there were around 97 total app downloads and 40 active installs.&lt;/p>
&lt;h3 id="an-opportunity-to-learn-about-photography">An opportunity to learn about photography&lt;/h3>
&lt;p>Essentially, in the process of creating Velocity Lapse&amp;rsquo;s camera features, I&amp;rsquo;m working towards a camera app with extra-nice time-lapse functionality. I find that kind of interesting.&lt;/p>
&lt;p>What&amp;rsquo;s nice about working on this kind of project that deals with the camera is that it has enabled me (maybe &amp;lsquo;given me a good excuse&amp;rsquo; is a better wording) to spend time learning about manual camera controls in depth, professional photography and, of course, time-lapse photography.&lt;/p>
&lt;p>Had I chosen to work on a project like a file manager, I wouldn&amp;rsquo;t have probably ever taken the time to dive into photography as I have now. Needless to say, I don&amp;rsquo;t regret my decision (quite the opposite).&lt;/p>
&lt;h3 id="an-opportunity-to-enjoy-creation">An opportunity to enjoy creation&lt;/h3>
&lt;p>During the process of creating and testing Velocity Lapse, I have had the opportunity to spend more time enjoying creation. Especially, the sky.&lt;/p>
&lt;p>Whether it&amp;rsquo;s wispy clouds or a pink and blue sunset, creating a time-lapse app has given me a good excuse to pay attention to it.&lt;/p>
&lt;p>I&amp;rsquo;ve really enjoyed it and maybe through creating this app, maybe I can compel and give more people an &amp;ldquo;excuse&amp;rdquo; to get out and enjoy it too.&lt;/p>
&lt;p>&lt;div class="youtube-player">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/fBrOPxkeTnw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;div class="youtube-player">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/36O4d31UyyE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;p>So, I encourage you to &lt;a href="https://play.google.com/store/apps/details?id=com.velocitylapse.velocitylapse">download the app&lt;/a> and go outside to capture a time-lapse yourself. :)&lt;/p>
&lt;h3 id="my-video-gets-popular-on-youtube">My video gets popular on YouTube&lt;/h3>
&lt;p>Speaking of enjoying creation, it seemed that people enjoyed the starscape time-lapse on the Velocity Lapse YouTube channel. The video received 1K views and 11 likes in the first week, &lt;strong>4.7K views and 46 likes in the first 3 weeks&lt;/strong>, and has 6K views and 56 likes as of this writing.&lt;/p>
&lt;blockquote>
&lt;p>Later update: The video now has &lt;strong>over 83K views&lt;/strong>, which is kind of crazy (to me) for a 30-second video.&lt;/p>&lt;/blockquote>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-2/starry-night-sky-analytics-10-2022.jpg"
alt="Starry night sky time-lapse video analytics">&lt;figcaption>
&lt;p>A glance at the stats for the starry night sky time-lapse video on Youtube as of 10/26/22&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Needless to say, this was way, far better than any other video I posted.&lt;/p>
&lt;p>Granted, it was a short video, but it was interesting and new to me, especially since other videos on the Velocity Lapse channel had fewer than 100 views (as of this writing).&lt;/p>
&lt;div class="youtube-player">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/BxRHqPGGO_g?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;p>The downloads on Google Play tripled, and some feedback and support queries came my way during this time. I assume this was due to the video receiving so much attention.&lt;/p>
&lt;p>Oddly enough, this happened while I was away on vacation. Go figure.&lt;/p>
&lt;h3 id="the-journey-continues">The journey continues&lt;/h3>
&lt;p>Thanks for reading. I hope you&amp;rsquo;ve enjoyed this post and have gained something from this journey so far. I know I have.&lt;/p>
&lt;p>If you have a suggestion, a comment, or advice, relating either to the app or this post, I&amp;rsquo;d love to hear what you have to share either in the comments below or via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Read the next part of the journey in &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-3/">part 3&lt;/a> of this series.&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;em>A big thanks to numerous individuals for their support and advice, making this journey possible. Special thanks to &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> for which I am grateful for his help developing the Android native side of the app and taking part in testing. And Yahweh, our Heavenly Father, from whom all knowledge and every good thing comes.&lt;/em>&lt;/p></description></item><item><title>The Journey Behind Velocity Lapse Part 1</title><link>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/</link><pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate><guid>https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/</guid><description>&lt;h3 id="a-new-project">A new project&lt;/h3>
&lt;p>I&amp;rsquo;ve been working on a new side project for the last few months. It&amp;rsquo;s a new time-lapse app for Android called &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a>.&lt;/p>
&lt;p>This post is the start of a series of dev-log posts I&amp;rsquo;m planning to write about my personal journey and learning process of creating Velocity Lapse. I plan to share the steps of planning, UI design, development, launch, and marketing.&lt;/p>
&lt;p>Although I am not at all new to design or development, mobile app development is a relatively new area for me. My only experience with mobile app development up to this point is my contributions to &lt;a href="https://biblenotify.github.io">Bible Notify&lt;/a> and some design-related work for another app.&lt;/p>
&lt;p>Above that, this the first time I have directly monitized one of my own software projects, since I usually go &lt;a href="https://github.com/Correct-Syntax">open-source&lt;/a> for most non-client projects.&lt;/p>
&lt;p>That is to say, if you&amp;rsquo;re more experienced in app development or the business of apps (or even if you&amp;rsquo;re not), I&amp;rsquo;d love to hear what you have to share. Feel free to reach out via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a> or write in the comments section below.&lt;/p>
&lt;h3 id="the-app-idea">The app idea&lt;/h3>
&lt;p>Every good project starts with a good, worthwhile idea.&lt;/p>
&lt;h4 id="initial-ideas">Initial ideas&lt;/h4>
&lt;p>Initially, some ideas I thought about were:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>reliable writers app&lt;/strong> where you don&amp;rsquo;t lose your work. (Probably sounds silly, but the existing apps, I&amp;rsquo;m told, don&amp;rsquo;t quite cut it).&lt;/li>
&lt;li>&lt;strong>file manager&lt;/strong> that could reach the level of the discontinued &amp;ldquo;ES file explorer&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;p>However, while I do write and I probably could use a file manager, I wasn&amp;rsquo;t interested in those ideas enough or see enough of a need for them &lt;em>personally&lt;/em>.&lt;/p>
&lt;p>While I think it is important to work on projects in areas you are &lt;em>not&lt;/em> really interested in to broaden your skills, I&amp;rsquo;ve found that it is easier to stick with something you are passionate about.&lt;/p>
&lt;p>My personal interests are in the areas of: the Bible, graphics, photography, and design, as evidenced by some of &lt;a href="https://github.com/Correct-Syntax">my open source work&lt;/a>. So, I couldn&amp;rsquo;t see myself developing the aforementioned ideas into apps.&lt;/p>
&lt;h4 id="the-final-idea">The final idea&lt;/h4>
&lt;p>With a bit more brainstorming, I came up with the idea of creating an app to create &lt;strong>time-lapses&lt;/strong>.&lt;/p>
&lt;p>I have fond memories of when I was younger and would experiment with time-lapses using an old Android tablet. My brother and I would time-lapse plants growing and mushrooms appearing in our greenhouse.&lt;/p>
&lt;p>Time-lapse, if you&amp;rsquo;re not aware, is the process of capturing images at intervals slower than a normal video and piecing them together to produce a video that appears sped up. Naturally slow movements appear much faster than in a normal video. The time-lapse effect can be very beautiful for things like sunsets, clouds, plants, or people walking the streets.&lt;/p>
&lt;div class="youtube-player">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/pi9G6py2Hv0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;p>Again, I did some quick validation of the idea from a personal standpoint and realized it was something I could personally use. I could glorify Yahweh, our Heavenly Father, with it by showing the beauty of His creation.&lt;/p>
&lt;p>After coming up with the idea, it was time to do some market research.&lt;/p>
&lt;p>&lt;em>Edit 2 years after the original publishing date of this post:&lt;/em> Somehow I had forgotten about it, but a year prior to this brainstorming I had worked on a small prototype for a time-lapse app. It is interesting how the idea kind of died and I totally forgot about it, but then it resurfaced.&lt;/p>
&lt;h3 id="make-the-app-great">&amp;ldquo;Make the app great&amp;rdquo;&lt;/h3>
&lt;p>Early on, I stumbled upon some advice from someone talking about marketing an app, which really struck me. The bit of advice was, &lt;strong>&amp;ldquo;make the app great&amp;rdquo;&lt;/strong>.&lt;/p>
&lt;p>Maybe that sounds obvious, but it is way too easy to get the cart ahead of the horse and spend most of the effort marketing the product instead of making a great product.&lt;/p>
&lt;p>Obviously, that doesn&amp;rsquo;t mean no time should be spent marketing, as that is another trap to fall into. However, as a web developer and designer myself, I know how much easier it is to promote something that is &amp;ldquo;great&amp;rdquo; to start with. I also know how excited I could get about creating a website to promote it while neglecting the app itself.&lt;/p>
&lt;p>So from then on, I decided to have the mindset of building a user-friendly, user-centric app focused on improving time-lapse on Android and &lt;strong>solving the paint-points&lt;/strong> found in other apps. Like, literally making this a &amp;ldquo;great&amp;rdquo; time-lapse app.&lt;/p>
&lt;p>From a marketing standpoint, &lt;strong>people buy solutions to their problems, not software.&lt;/strong> So, solving user pain points is the best approach that I am aware of.&lt;/p>
&lt;h3 id="market-research">Market research&lt;/h3>
&lt;p>I conducted research on the Google Play Store as well as some of the top apps on the Apple App Store to get an idea of the current state of time-lapse/camera apps for Android and see where the pain points were.&lt;/p>
&lt;p>As someone that has always had an interest in photography and videography, I had already used a few of the more well-known Android time-lapse apps before I ever had the idea to create one. However, after reading through hundreds of reviews and creating a ton of notes, I could see some areas where the current apps were failing, where they were doing well, and what people were looking for in a time-lapse app.&lt;/p>
&lt;p>I was also able to get some metrics on apps on the market via Apptopia&amp;rsquo;s free report, which was helpful.&lt;/p>
&lt;h3 id="initial-planning">Initial planning&lt;/h3>
&lt;p>It&amp;rsquo;s one thing to discover things that could be improved in other apps; it&amp;rsquo;s totally another thing to fix them and pull off a great user experience in your own.&lt;/p>
&lt;p>So, why doesn&amp;rsquo;t everyone just go out and make a time-lapse app?&lt;/p>
&lt;p>It was pretty clear from the number of notes I had taken that even a simple time-lapse app has a lot of things that need to be done just right.&lt;/p>
&lt;p>Two things really stood out from my notes:&lt;/p>
&lt;ul>
&lt;li>Reliability&lt;/li>
&lt;li>Flexibility&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Reliability&lt;/strong> because who wants to go through the trouble of setting up a time-lapse and waiting for the capture to complete (and for the video to render in some cases) only for the app to crash or something non-intuitive happens? No one, of course.&lt;/p>
&lt;p>&lt;strong>Flexibility&lt;/strong> because when you go to download an app, it should be capable of doing things in a non-limiting way and respond well under a variety of circumstances.&lt;/p>
&lt;p>&lt;em>Wait.&lt;/em> Did I unknowingly just describe a good app in general? ..I guess I have.&lt;/p>
&lt;p>Indeed, having reliability and flexibility is an important part of making good software in general.&lt;/p>
&lt;h4 id="initial-ui-sketches-and-ideas">Initial UI sketches and ideas&lt;/h4>
&lt;p>I then drew some initial sketches and wrote notes of what I imagined the UI and workflow to be without diving into other apps, so I could come up with some original ideas.&lt;/p>
&lt;p>Let me be honest: looking back, those sketches were a bit naive and didn&amp;rsquo;t include some settings a time-lapse app should have. Clearly I didn&amp;rsquo;t know about time-lapse as deeply as I may have thought. However, it gave me a springboard to where I could get started with my &lt;em>own&lt;/em> take on a time-lapse app, even if it was a little out of reality and missing features.&lt;/p>
&lt;p>I then opened up to installing and testing almost every app related to time-lapse on Google Play over the course of the next month and a half, taking notes and reading reviews to gather what I could. I also did some looking online for independent reviews as well as some apps on the Apple App Store.&lt;/p>
&lt;p>Moving to my laptop, I then created a digital mock-up of the different screens (views) that the app would have. At this point, I overcomplicated it in certain areas like the home screen where I was thinking everything could be crammed. Therefore, I did end up going back and recreating the layout a number of times to get it condensed down to a better design.&lt;/p>
&lt;h3 id="my-choice-of-a-tech-stack">My choice of a tech stack&lt;/h3>
&lt;p>For the tech-savy readers (read: developers), the tech stack I chose is pretty simple:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://flutter.dev">Flutter&lt;/a> for the UI&lt;/li>
&lt;li>Dart (because of Flutter) for the main business logic&lt;/li>
&lt;li>Java or Kotlin for any native platform code needed (on Android)&lt;/li>
&lt;/ul>
&lt;p>Prior to this, I had never done Flutter/Dart development and only had a small bit of Java experience so this was an entirely unfamiliar tech stack to me.&lt;/p>
&lt;h4 id="why-flutter-and-dart">Why Flutter and Dart?&lt;/h4>
&lt;p>Why not?&lt;/p>
&lt;p>Real answer: Flutter looked really neat and was something I had been wanting to try for a while. It&amp;rsquo;s cross-platform and isn&amp;rsquo;t limited by the performance of a webview or browser engine. In addition, Flutter has hot-reload and really great tooling for Android Studio and VScode.&lt;/p>
&lt;h4 id="why-not-react-native-or-another-js-framework">Why not React Native or another js framework?&lt;/h4>
&lt;p>I was concerned about the performance of using a Javascript framework. Also didn&amp;rsquo;t feel that using a Javascript framework for an app that accesses so much lower-level hardware (like the camera) was a good idea.&lt;/p>
&lt;h4 id="alright-why-not-native-java-or-kotlin-then">Alright, why not native Java or Kotlin then?&lt;/h4>
&lt;p>Besides the comments above, I just hadn&amp;rsquo;t liked Java Android development all that much from my bits of working with it. More just a personal preference at that point.&lt;/p>
&lt;blockquote>
&lt;p>Ironically I ended up diving into both Java &lt;strong>and&lt;/strong> Kotlin &lt;strong>a lot&lt;/strong>. (What did I expect for an app that accesses so much hardware?) Thankfully, I had help from &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> who had a lot more experience than I did with Android development. Since then I&amp;rsquo;ve learned to like Kotlin.&lt;/p>&lt;/blockquote>
&lt;h3 id="learning-dart-and-flutter">Learning Dart and Flutter&lt;/h3>
&lt;p>I was eager to get started with developing the app, as I figured there would be a learning phase with Flutter and Dart. I was pleasantly surprised at how simple the installation and project setup were. The default Flutter project code didn&amp;rsquo;t seem &amp;ldquo;too far out there&amp;rdquo; either.&lt;/p>
&lt;h4 id="the-first-hurdle-android-emulators">The first hurdle: Android emulators&lt;/h4>
&lt;p>For whatever reason, however, the Android emulators kept giving me issues. The emulators wouldn&amp;rsquo;t restart until after I rebooted my laptop. It ended up being a configuration problem on my end (of course&amp;hellip;).&lt;/p>
&lt;p>Later on, when I needed a more realistic idea of what I was doing, I enabled USB debugging on my Android phone, which helped greatly improve my productivity and testing.&lt;/p>
&lt;blockquote>
&lt;p>Tip: Make sure your phone&amp;rsquo;s font size is set to &lt;code>Default&lt;/code> when testing, otherwise the text scaling could be off, and when you install the app on a phone with a larger screen, the UI text could be tiny.&lt;/p>&lt;/blockquote>
&lt;h4 id="the-second-hurdle-flutter-constraints">The second hurdle: Flutter constraints&lt;/h4>
&lt;p>Once past the emulator hurdle, I quickly learned that Flutter constraints are &lt;strong>not&lt;/strong> like web layouts.&lt;/p>
&lt;p>I kept running into the (in)famous overflow errors and &lt;code>unbounded layout constraints&lt;/code> fatal errors. Needless to say, I didn&amp;rsquo;t get very far until I understood how constraints and layout worked.&lt;/p>
&lt;p>It is wise advice to read and understand the Flutter documentation on &lt;a href="https://docs.flutter.dev/development/ui/layout/constraints">layout constraints&lt;/a> &lt;em>before&lt;/em> starting.&lt;/p>
&lt;h4 id="learning-takes-time">Learning takes time&lt;/h4>
&lt;p>For the first few weeks, I familiarized myself with the various Flutter and Dart concepts, started to narrow in on the app design, and made a tiny bit of progress on the app (which I later rewrote in a fraction of the time).&lt;/p>
&lt;p>It&amp;rsquo;s worthy of note that this project uses almost &lt;em>every&lt;/em> main feature in Flutter. From native platform channels to the somewhat obscure &lt;code>RepaintBoundry&lt;/code> widget, it has it all. This app was packed with a lot of Flutter and Dart things to figure out. Thus, for my first actual Flutter application, this wasn&amp;rsquo;t exactly on the level of a simple to-do app.&lt;/p>
&lt;p>Needless to say, at that point progress was really slow and it was more of me learning than working on the app.&lt;/p>
&lt;h3 id="my-opinion-of-flutter-and-dart">My opinion of Flutter and Dart&lt;/h3>
&lt;p>Fast-forward to today, and I&amp;rsquo;ve used Flutter and Dart for ~4 months as of the writing of this post. So far my impression of Flutter and Dart is good.&lt;/p>
&lt;h4 id="flutter">Flutter&lt;/h4>
&lt;p>Overall, I&amp;rsquo;ve enjoyed Flutter. Although I&amp;rsquo;ve had multiple headaches with understanding some things (read: layout constraints) initially, I welcomed the well-structured, everything-is-a-widget design and, of course, the hot reload.&lt;/p>
&lt;p>If you&amp;rsquo;re looking for a short read to help you decide whether you should use Flutter and Dart for your project, I can confirm much of what &lt;a href="https://medium.com/lightsnap/7-things-we-learned-writing-a-camera-app-in-flutter-ad6a1debe055">this article&lt;/a> states (although its a bit outdated).&lt;/p>
&lt;h4 id="dart">Dart&lt;/h4>
&lt;p>I felt quite at home with Dart almost straightaway. It has sort of a Javascript/Java/C++ feel to it, but is much more suited for UI code in my opinion.&lt;/p>
&lt;p>It was actually the quickest I&amp;rsquo;ve ever picked up a programming language to the point where I could work with it. Perhaps because I&amp;rsquo;ve worked with and learned so many programming languages previously, or maybe because of the similarities to other languages.&lt;/p>
&lt;h4 id="deeply-nested-codeoh-no">Deeply nested code&amp;hellip;oh no&lt;/h4>
&lt;p>One thing that is very apparent when you look at almost any Flutter Dart code is the amount of nesting. This can obviously be &lt;em>very&lt;/em> overwhelming to look at and scroll through. Ideally, you keep the code under control by breaking it out into another widget, etc., but oftentimes it can still be a little hairy.&lt;/p>
&lt;p>Thankfully, most modern code editors like VScode have a code folding feature that allows you to collapse function/method bodies, etc., and class initializations (in our case, widgets). Until this point, I hadn&amp;rsquo;t used this code editor feature, but for Dart it is really a time (and eye) saver.&lt;/p>
&lt;h3 id="the-first-milestone">The first milestone&lt;/h3>
&lt;p>After a long and hard month of work, I finally had a &amp;ldquo;barely working&amp;rdquo; version of the capture and some other main features in a rough, unpolished state.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-1/rough-version-early-ui.gif"
alt="A gif showing the early working state of Velocity Lapse">&lt;figcaption>
&lt;p>The early state of Velocity Lapse. Notice how much the UI has changed since then.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>It was a nice milestone because at this point, you could capture and render the time-lapse to a video. Albeit, given the proper knowledge, due to the app&amp;rsquo;s rough and unpolished state.&lt;/p>
&lt;h3 id="simplify-simplify-simplify">Simplify, simplify, simplify&lt;/h3>
&lt;p>Throughout the project, one thing has been constant: the gradual change of the UI towards simplification.&lt;/p>
&lt;p>Originally, the UI options were a bit more complicated than they needed to be. I and some select testers tested using the app in real-life situations (we went out and captured time-lapses), and it was clear more refinement could be done.&lt;/p>
&lt;p>A few things in the capture screen UI weren&amp;rsquo;t 100% clear, and even though I made the app, I mixed up which settings I was changing more than once. Glare from the sun and sweat on your brow can really change the way you use an app.&lt;/p>
&lt;p>So, I redesigned the tabs to make it more clear which setting was selected.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-1/capture-screen-ui.jpeg"
alt="The capture screen interface">&lt;figcaption>
&lt;p>The capture screen interface&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Velocity Lapse is meant for everyday people as much as it is for serious time-lapse photographers, so I decided to also cut out confusion by using plain English where possible vs. the technical terms.&lt;/p>
&lt;h3 id="logo-design">Logo design&lt;/h3>
&lt;p>Over the course of the three months of developing the app, I had sketched about a hundred different logo concepts, both on paper and digitally. Some others tried to sketch some ideas and spent quite a bit of time brainstorming and iterating over potential ideas as well. However, the ideas were either too generic or unrelated, too similar to another logo, or just a bad design to begin with.&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-1/logo-design-sketches.jpg"
alt="Sketches of ideas for the logo">&lt;figcaption>
&lt;p>Coming up with a logo for Velocity Lapse&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>The name &amp;ldquo;Velocity Lapse&amp;rdquo; did give us some concepts to work with (which we wrote down as tangible objects), but in the end, almost none of the ideas were anything we thought would accurately represent the app. The concepts we were coming up with were either too complex or too technical due to &lt;em>velocity&lt;/em> being a bit of a technical, science term.&lt;/p>
&lt;p>After praying for an idea or concept to come, it really, literally did. (We cannot underestimate prayer.)&lt;/p>
&lt;figure>&lt;img src="https://noahrahm.com/posts/journey-behind-velocity-lapse-1/logo-design.jpeg"
alt="The Velocity Lapse logo">&lt;figcaption>
&lt;p>The Velocity Lapse logo&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>The concept was a camera lens with a spinning-circle shape to show a sense of motion. I did a few variations of it and may end up changing it later, but for now it works as a logo.&lt;/p>
&lt;h3 id="setting-up-a-landing-page">Setting up a landing page&lt;/h3>
&lt;p>Setting up the landing page for Velocity Lapse was a nice break from developing the app. I purchased the domain name &lt;em>velocitylapse.com&lt;/em> and setup a landing page where visitors could join a waitlist to get early access to the app.&lt;/p>
&lt;p>I didn&amp;rsquo;t actually expect anyone to do so or even find the website since I hadn&amp;rsquo;t promoted it yet, though. It was meant more as a placeholder until the app was ready for a real home page.&lt;/p>
&lt;p>With that out of the way, I went back to work on the app.&lt;/p>
&lt;h3 id="development-challenges">Development challenges&lt;/h3>
&lt;p>There were quite a few technical challenges and set backs in development.&lt;/p>
&lt;h4 id="h264-encoding-artifacts">H.264 encoding artifacts&lt;/h4>
&lt;p>One big set back in particular had to do with the renderer, which would take the captured images and convert them to an H.264-encoded MP4 video file.&lt;/p>
&lt;p>I had been finishing up the &amp;ldquo;last&amp;rdquo; bug fixes and edits before getting the minimal app off the ground and into the internal and open testing stages.&lt;/p>
&lt;p>However, I discovered that the exported videos had H.264 codec artifacts (banding). The artifacts, ugly bands of pink across the video, seemed to appear after the first second or two of the video. Up until this point, I had only rendered out 2 second long videos, so I didn&amp;rsquo;t realize this earlier.&lt;/p>
&lt;p>This seemed to be an issue with the &lt;a href="https://github.com/jcodec/jcodec">Jcodec&lt;/a> Java library that I was using as the encoder for the video export renderer. I wasn&amp;rsquo;t able to produce even one video with jcodec without artifacts. Unfortunately, I hadn&amp;rsquo;t noticed this sooner, so the time spent implementing the renderer with Jcodec had to be thrown away.&lt;/p>
&lt;p>Some options were to use either:&lt;/p>
&lt;ul>
&lt;li>The native media APIs for encoding videos&lt;/li>
&lt;li>The NDK with a C++ library to encode the videos&lt;/li>
&lt;/ul>
&lt;p>However, after looking at what those would require, I wasn&amp;rsquo;t motivated to go in either of those directions, writing something from scratch myself.&lt;/p>
&lt;p>Obviously, the app couldn&amp;rsquo;t be released without a way to export the time-lapse to video, so I needed to think of another way.&lt;/p>
&lt;p>After a lot of searching, I came across a small package called &lt;a href="https://github.com/israel-fl/bitmap2video">bitmap2video&lt;/a> which looked like it might do the trick. However, since it was written in Kotlin, it would mean switching the existing code from Java to Kotlin.&lt;/p>
&lt;p>I decided to go for it and embrace it as an unexpected opportunity to learn Kotlin.&lt;/p>
&lt;p>First, I did a bunch of extensive testing to verify that it didn&amp;rsquo;t produce artifacts like Jcodec. Thankfully, it didn&amp;rsquo;t.&lt;/p>
&lt;p>I did end up having to fix some deprecated code and other minor things to make it work, but came to the conclusion that with some more customization, it would indeed work.&lt;/p>
&lt;p>Although I&amp;rsquo;ve never written in Kotlin before, the transition was pretty smooth with Android Studio&amp;rsquo;s Java to Kotlin converter, the Kotlin manual, and a bunch of online searches. The most difficult part was wrapping my head around the packages use of Kotlin&amp;rsquo;s coroutines.&lt;/p>
&lt;p>The end result was a much faster, more lightweight renderer than the one written in Java with jcodec. Plus, since the Kotlin version was a smaller package that I pulled directly into the source code, I could benefit from being able to make edits/fixes for Velocity Lapse&amp;rsquo;s specific use case.&lt;/p>
&lt;p>So, in the end, it turned out better because of the set back. :)&lt;/p>
&lt;h3 id="the-first-pre-release-internal-testing">The first pre-release (internal testing)&lt;/h3>
&lt;p>Finally, after 3 months of development, the app was in a state that I felt deserved a pre-release tag. I worked through the process of generating a keystore and generating the app bundle to upload to Google Play for internal testing.&lt;/p>
&lt;p>In the play console, I ended up getting some warnings about sensitive permissions, which I quickly resolved by removing the unnecessary permissions from the Android manifest. Evidently, I had added permissions to the app during development while testing some packages and forgot to remove them.&lt;/p>
&lt;p>After that fix, I was able to successfully release the app bundle to internal testing.&lt;/p>
&lt;h3 id="the-journey-continues">The journey continues&lt;/h3>
&lt;p>Thanks for reading. I hope you&amp;rsquo;ve enjoyed this post and have gained something from this journey so far as I have.&lt;/p>
&lt;p>If you have a suggestion, a comment, or advice, relating either to the app or this post, I&amp;rsquo;d love to hear what you have to share either in the comments below or via &lt;a href="mailto:hi@noahrahm.com">email&lt;/a>.&lt;/p>
&lt;p>&lt;strong>You can read the next part of the journey in &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-2/">part 2&lt;/a> of this series.&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;em>A big thanks to numerous individuals for their support and advice, making this journey possible. Special thanks to &lt;a href="https://github.com/sundrycode">@sundrycode&lt;/a> for which I am grateful for his help developing the Android native side of the app and taking part in testing. And Yahweh, our Heavenly Father, from whom all knowledge and every good thing come.&lt;/em>&lt;/p></description></item><item><title>Android app for creating time-lapse videos</title><link>https://noahrahm.com/work/velocity-lapse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/velocity-lapse/</guid><description>&lt;p>Prior to working on Velocity Lapse, I typically only worked on web design and development projects. Velocity Lapse gave me the opportunity to lean into Android mobile app design and development, app marketing, and user support.&lt;/p>
&lt;p>The initial design and development began in the summer of 2022. In late 2022, Velocity Lapse became available as an early-access beta on Google Play, gaining over 22K users and a nomination for the Hackernoon Startup of the Year 2023.&lt;/p>
&lt;p>I developed and refined Velocity Lapse based on feedback from beta users before finally launching v1.0 into production on November 17th, 2024.&lt;/p>
&lt;p>Velocity Lapse uses mutiple hardware Android APIs like camera2 and MediaCodec, as well as the C++ NDK and OpenCV, making it one of the most hardware-intensive projects I&amp;rsquo;ve worked on to date.&lt;/p>
&lt;p>I&amp;rsquo;ve written a few thousand words about the full process in a &lt;a href="https://noahrahm.com/posts/journey-behind-velocity-lapse-part-1/">series of posts&lt;/a> if you&amp;rsquo;d like to get a dev-log style look at my journey creating and launching Velocity Lapse.&lt;/p></description></item><item><title>Contact</title><link>https://noahrahm.com/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/contact/</guid><description>&lt;p>Thanks for wanting to get in touch with me. Iâ€™m currently open to new client work, and collaboration opportunities.&lt;/p>
&lt;p>The best way to contact me is via email, so here it is:&lt;/p></description></item><item><title>Hello, my name is Noah.</title><link>https://noahrahm.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/about/</guid><description>&lt;p>I&amp;rsquo;m a software developer/designer based in the central United States. I especially love working on meaningful projects that glorify our Heavenly Father Yahweh, and have a positive impact on others.&lt;/p>
&lt;p>Iâ€™m currently open to new client work and collaboration opportunities, so feel free to &lt;a href="mailto:hi@noahrahm.com">say hello&lt;/a>.&lt;/p>
&lt;h4 id="personal">Personal&lt;/h4>
&lt;p>A few of my hobbies include &lt;a href="https://art.noahrahm.com">drawing&lt;/a>, &lt;a href="https://art.noahrahm.com/photography/">photography&lt;/a>, music, &lt;a href="https://blog.noahrahm.com">writing&lt;/a>, and enjoying Yahwehâ€™s awesome creation with my family.&lt;/p>
&lt;h4 id="other-endeavors">Other endeavors&lt;/h4>
&lt;p>I&amp;rsquo;ve been extremely blessed to work on a lot of different projects and collaborate with many great people.&lt;/p>
&lt;p>Combining my passion for photography and filmmaking with my technical skills, since mid-2022, I&amp;rsquo;ve been working on &lt;a href="https://velocitylapse.com">Velocity Lapse&lt;/a>, an Android app to create time-lapses.&lt;/p>
&lt;p>Creating things, collaborating with others, and learning new technologies motivate me to create and contribute to open-source projects, including &lt;a href="https://github.com/GimelStudio">Gimel Studio&lt;/a>, &lt;a href="https://steadycms.com">SteadyCMS&lt;/a>, &lt;a href="https://bibleside.com">Bibleside&lt;/a>, &lt;a href="https://biblenotify.github.io">Bible Notify&lt;/a>, and &lt;a href="https://flameshot.org">Flameshot&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;m also a part of a project to film high-quality readings of the Psalms in nature, called &lt;a href="https://psalms23project.com">The Psalms 23 Project&lt;/a>.&lt;/p></description></item><item><title>Logo and brand guidelines for a popular C++ library</title><link>https://noahrahm.com/work/openimageio-branding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/openimageio-branding/</guid><description>&lt;p>When working on a logo design project, I begin with a research phase to learn about the industry and client. Looking through existing OpenImageIO materials, I found &lt;a href="https://openimageio.readthedocs.io/en/latest/_images/grid-small.jpg">an image of a pixel grid&lt;/a> in the OpenImageIO documentation. It gave me the idea to experiment with variations of a simplified pixel grid.&lt;/p>
&lt;p>Since OpenImageIO is a library for reading, writing, and processing images, I brainstormed concepts having to do with pixels in an image, image processing, and file I/O.&lt;/p>
&lt;p>With feedback from Larry Gritz, OpenImageIO&amp;rsquo;s maintainer, and others, I refined the concept to a square with a grid of pixels and a gradient, representing the processing of an image. The final consensus was the logo concept with a square icon and a wordmark set in Open Sans bold.&lt;/p>
&lt;p>&lt;img src="https://noahrahm.com/work/openimageio/openimageio-logo-and-branding.webp" alt="OpenImageIO logo" title="OpenImageIO logo">&lt;/p>
&lt;p>Once the logo concept was finalized, I created different color variations of the logo for potential use cases, and included guidelines for use in a brand guidelines book. I also created a few promotional graphics.&lt;/p>
&lt;p>The OpenImageIO logo was a success, helping OpenImageIO meet the logo requirement for inclusion in the Academy Software Foundation&amp;rsquo;s projects, and providing a proper representation of the 15-year-old project.&lt;/p>
&lt;p>&lt;em>The OpenImageIO logo is a trademark of LF Projects, LLC. Used with permission.&lt;/em>&lt;/p></description></item><item><title>Logo for a video &amp; photography studio based in the US.</title><link>https://noahrahm.com/work/hilltop-motion-logo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/hilltop-motion-logo/</guid><description>&lt;p>&lt;img src="https://noahrahm.com/work/hilltopmotion/logo-board.webp" alt="Hilltop Motion logo" title="Hilltop Motion logo">&lt;/p></description></item><item><title>Modern website for a popular screenshot tool</title><link>https://noahrahm.com/work/flameshot-website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/flameshot-website/</guid><description>&lt;p>&lt;em>&amp;quot;[For] Flameshot, we were looking for a solution to have a website that can contain various essential aspects into one platform including documentation, FAQ, and also it portrays our software, Flameshot, as a beautiful and easy-to-use&amp;hellip;tool. [Noah] kindly provided our open source project a website based on [the] Zola static website generator, with a beautiful design using modern front-end technologies. At the same time, this reduces the maintenance efforts from our dev team and improves the aesthetics and user-friendliness compared to our previous solution. [He] worked closely with us to tailor the website exactly to our needs. We wholeheartedly recommend [him].&amp;quot;&lt;/em>&lt;/p>
&lt;p>&lt;strong>Mehrad Mahmoudian, on behalf of the Flameshot.org dev team&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://noahrahm.com/work/flameshot/flameshot-website.webp" alt="Flameshot landing page" title="Flameshot landing page light/dark modes">&lt;/p></description></item><item><title>Multi-fold business card design for a solar energy consultant</title><link>https://noahrahm.com/work/ozark-solar-business-card-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/ozark-solar-business-card-design/</guid><description>&lt;p>Beau came prepared with a bullet-point list of compelling reasons someone should go with Ozark Solar for their solar energy system installation services.&lt;/p>
&lt;p>I worked with him to fine-tune the wording and make sure the most common questions were answered at a glance. It was clear that highlighting that Ozark Solar is a trusted, well-established company with fair benefits was the way to go. Having been in business for over 15 years, Ozark Solar had the experience, knowledge, and honesty that stood out from the competition.&lt;/p>
&lt;p>I specifically chose to use images of solar installations that Beau had worked on as a way to showcase his work right on the card. This would provide an opportunity for him to show potential customers real-life examples of his solar installation work.&lt;/p>
&lt;p>&lt;img src="https://noahrahm.com/work/ozarksolar/images.jpg" alt="Solar installations" title="Beau's solar installations">&lt;/p>
&lt;p>Balancing readability and maintaining a clear, uncluttered design were top priorities. Although it was a multi-fold business card with four areas, it was a unique challenge to include all of the necessary content. In the end, I was able to include more information than what we had originally planned and yet keep a simple layout.&lt;/p>
&lt;p>I opted to incorporate elements of Ozark Solar&amp;rsquo;s branding to keep the business card recognizable while allowing the freedom necessary to create something unique and different. The choice of the typeface, Titillium Web, was motivated by the desire to maintain the same look as Ozark Solar&amp;rsquo;s existing logo.&lt;/p>
&lt;p>&lt;img src="https://noahrahm.com/work/ozarksolar/business-card-design-sides.webp" alt="The sides of the business card" title="The four sides of the business card">&lt;/p>
&lt;p>Everything came together nicely. Beau was really happy with how the design turned out, and I had an enjoyable time working with him.&lt;/p></description></item><item><title>New website for a local, life-impacting organization</title><link>https://noahrahm.com/work/options-of-ava-website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/options-of-ava-website/</guid><description>&lt;p>The Options of Ava website has been featured in DesignRush&amp;rsquo;s &lt;a href="https://www.designrush.com/best-designs/websites/trends/best-pregnancy-website-designs">best pregnancy website designs&lt;/a> article.&lt;/p></description></item><item><title>Offline Android Bible app</title><link>https://noahrahm.com/work/bibleside/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/bibleside/</guid><description/></item><item><title>Open-source, flexible content management system for static websites.</title><link>https://noahrahm.com/work/steadycms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/steadycms/</guid><description/></item><item><title>Open-source, non-destructive, node-based 2D graphics editor</title><link>https://noahrahm.com/work/gimel-studio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/gimel-studio/</guid><description/></item><item><title>Privacy</title><link>https://noahrahm.com/privacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/privacy/</guid><description>&lt;p>This website (noahrahm.com) and the subdomains (art.noahrahm.com, blog.noahrahm.com) use &lt;a href="https://matomo.org">Matomo&lt;/a>, a privacy-focused analytics platform.&lt;/p>
&lt;ul>
&lt;li>It is self-hosted, which means that the data never leaves my server.&lt;/li>
&lt;li>The analytics are used solely for the purposes of audience measurement and evaluation of the website performance.&lt;/li>
&lt;li>When you visit the website, it will store: the website from which you visited from, the pages of the website you visit, the date and duration of your visit, your anonymised IP address, and information from the device (device type, operating system, screen resolution, language, country you are located in, and web browser type) you used during your visit.&lt;/li>
&lt;li>The analytics don&amp;rsquo;t track you across the web. Because the data doesn&amp;rsquo;t leave my server, Matomo (as a company) doesn&amp;rsquo;t see that data either.&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;d like, you can opt-out of analytics below:&lt;/p>
&lt;div class="my-5" id="matomo-opt-out">&lt;/div>
&lt;script src="https://analytics.noahrahm.com/index.php?module=CoreAdminHome&amp;action=optOutJS&amp;divId=matomo-opt-out&amp;language=auto&amp;backgroundColor=092432&amp;fontColor=ffffff&amp;fontSize=16px&amp;fontFamily=Arial&amp;showIntro=1">&lt;/script>
&lt;p>This site uses third-party web fonts via &lt;a href="https://fonts.coollabs.io/">Coollabs fonts&lt;/a>, a privacy-friendly replacement for Google Fonts. The &lt;a href="https://unpkg.com">unpkg.com CDN&lt;/a> serves Alpine.js.&lt;/p>
&lt;p>Learn more about the tech this website uses &lt;a href="https://noahrahm.com/colophon/">here&lt;/a>.&lt;/p></description></item><item><title>Psalms from the Bible read on-location, in nature</title><link>https://noahrahm.com/work/the-psalms-23-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/the-psalms-23-project/</guid><description/></item><item><title>Web-based photo reference tool for artists &amp; creatives</title><link>https://noahrahm.com/work/reference8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/work/reference8/</guid><description/></item><item><title>Website Colophon</title><link>https://noahrahm.com/colophon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noahrahm.com/colophon/</guid><description>&lt;p>&lt;strong>Wondering what goes into creating a website like this?&lt;/strong> This page is for you.&lt;/p>
&lt;h3 id="technology">Technology&lt;/h3>
&lt;p>Here&amp;rsquo;s the tech stack I used for this site:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io">Hugo&lt;/a> - used to generate the static website.&lt;/li>
&lt;li>&lt;a href="https://tailwindcss.com/">Tailwindcss&lt;/a> - used for the utility-first CSS approach, with my own custom CSS added.&lt;/li>
&lt;li>&lt;a href="https://alpinejs.dev/">Alpine.js&lt;/a> - used for the bits of Javascript functionality on this site.&lt;/li>
&lt;li>&lt;a href="https://fonts.coollabs.io/">Coollabs fonts&lt;/a> - used as a privacy-friendly replacement for Google Fonts.&lt;/li>
&lt;li>&lt;a href="https://pages.github.com/">Github Pages&lt;/a> - used to host this site.&lt;/li>
&lt;li>&lt;a href="https://matomo.org">Matomo&lt;/a> - used for privacy-respecting analytics (self-hosted).&lt;/li>
&lt;/ul>
&lt;p>Source code for this website is available in the Github &lt;a href="https://github.com/Correct-Syntax/correct-syntax.github.io">repository&lt;/a>.&lt;/p>
&lt;h3 id="visuals">Visuals&lt;/h3>
&lt;p>I designed the pages in &lt;a href="https://icons8.com/lunacy">Lunacy&lt;/a> (A great tool, but I don&amp;rsquo;t really care for the name) and created whatever other mockups and graphics were necessary myself using a combination of &lt;a href="https://blender.org">Blender&lt;/a>, &lt;a href="https://gimp.org">GIMP&lt;/a>, and &lt;a href="https://affinity.serif.com/en-us/designer/">Affinity Designer&lt;/a>.&lt;/p>
&lt;h3 id="text">Text&lt;/h3>
&lt;p>Given the proliferation of &amp;ldquo;AI&amp;rdquo; written posts lately, I believe it&amp;rsquo;s important to be upfront and make a distinction between who (or what) is writing.&lt;/p>
&lt;p>All text on this website is my own writing, written by me, a human. I will sometimes run the text through spell and grammar check, but I choose to not use &amp;ldquo;AI chatbots&amp;rdquo; to either write or assist me in writing or research.&lt;/p>
&lt;p>Now you know who to blame. :)&lt;/p></description></item></channel></rss>